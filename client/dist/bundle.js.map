{"version":3,"file":"bundle.js","mappings":"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","sources":["webpack://cosc-625/./node_modules/@socket.io/component-emitter/index.js","webpack://cosc-625/./node_modules/backo2/index.js","webpack://cosc-625/./node_modules/has-cors/index.js","webpack://cosc-625/./node_modules/parseqs/index.js","webpack://cosc-625/./node_modules/parseuri/index.js","webpack://cosc-625/./node_modules/yeast/index.js","webpack://cosc-625/webpack/bootstrap","webpack://cosc-625/webpack/runtime/define property getters","webpack://cosc-625/webpack/runtime/hasOwnProperty shorthand","webpack://cosc-625/webpack/runtime/make namespace object","webpack://cosc-625/./node_modules/engine.io-client/build/esm/globalThis.browser.js","webpack://cosc-625/./node_modules/engine.io-client/build/esm/transports/xmlhttprequest.browser.js","webpack://cosc-625/./node_modules/engine.io-client/build/esm/util.js","webpack://cosc-625/./node_modules/engine.io-parser/build/esm/commons.js","webpack://cosc-625/./node_modules/engine.io-parser/build/esm/encodePacket.browser.js","webpack://cosc-625/./node_modules/base64-arraybuffer/dist/base64-arraybuffer.es5.js","webpack://cosc-625/./node_modules/engine.io-parser/build/esm/decodePacket.browser.js","webpack://cosc-625/./node_modules/engine.io-parser/build/esm/index.js","webpack://cosc-625/./node_modules/engine.io-client/build/esm/transport.js","webpack://cosc-625/./node_modules/engine.io-client/build/esm/transports/polling.js","webpack://cosc-625/./node_modules/engine.io-client/build/esm/transports/polling-xhr.js","webpack://cosc-625/./node_modules/engine.io-client/build/esm/transports/websocket-constructor.browser.js","webpack://cosc-625/./node_modules/engine.io-client/build/esm/transports/websocket.js","webpack://cosc-625/./node_modules/engine.io-client/build/esm/transports/index.js","webpack://cosc-625/./node_modules/engine.io-client/build/esm/socket.js","webpack://cosc-625/./node_modules/engine.io-client/build/esm/index.js","webpack://cosc-625/./node_modules/socket.io-parser/build/esm/is-binary.js","webpack://cosc-625/./node_modules/socket.io-parser/build/esm/binary.js","webpack://cosc-625/./node_modules/socket.io-parser/build/esm/index.js","webpack://cosc-625/./node_modules/socket.io-client/build/esm/on.js","webpack://cosc-625/./node_modules/socket.io-client/build/esm/socket.js","webpack://cosc-625/./node_modules/socket.io-client/build/esm/manager.js","webpack://cosc-625/./node_modules/socket.io-client/build/esm/index.js","webpack://cosc-625/./node_modules/socket.io-client/build/esm/url.js","webpack://cosc-625/./client/src/index.js"],"sourcesContent":["\n/**\n * Expose `Emitter`.\n */\n\nexports.Emitter = Emitter;\n\n/**\n * Initialize a new `Emitter`.\n *\n * @api public\n */\n\nfunction Emitter(obj) {\n  if (obj) return mixin(obj);\n}\n\n/**\n * Mixin the emitter properties.\n *\n * @param {Object} obj\n * @return {Object}\n * @api private\n */\n\nfunction mixin(obj) {\n  for (var key in Emitter.prototype) {\n    obj[key] = Emitter.prototype[key];\n  }\n  return obj;\n}\n\n/**\n * Listen on the given `event` with `fn`.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.on =\nEmitter.prototype.addEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n  (this._callbacks['$' + event] = this._callbacks['$' + event] || [])\n    .push(fn);\n  return this;\n};\n\n/**\n * Adds an `event` listener that will be invoked a single\n * time then automatically removed.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.once = function(event, fn){\n  function on() {\n    this.off(event, on);\n    fn.apply(this, arguments);\n  }\n\n  on.fn = fn;\n  this.on(event, on);\n  return this;\n};\n\n/**\n * Remove the given callback for `event` or all\n * registered callbacks.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.off =\nEmitter.prototype.removeListener =\nEmitter.prototype.removeAllListeners =\nEmitter.prototype.removeEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n\n  // all\n  if (0 == arguments.length) {\n    this._callbacks = {};\n    return this;\n  }\n\n  // specific event\n  var callbacks = this._callbacks['$' + event];\n  if (!callbacks) return this;\n\n  // remove all handlers\n  if (1 == arguments.length) {\n    delete this._callbacks['$' + event];\n    return this;\n  }\n\n  // remove specific handler\n  var cb;\n  for (var i = 0; i < callbacks.length; i++) {\n    cb = callbacks[i];\n    if (cb === fn || cb.fn === fn) {\n      callbacks.splice(i, 1);\n      break;\n    }\n  }\n\n  // Remove event specific arrays for event types that no\n  // one is subscribed for to avoid memory leak.\n  if (callbacks.length === 0) {\n    delete this._callbacks['$' + event];\n  }\n\n  return this;\n};\n\n/**\n * Emit `event` with the given args.\n *\n * @param {String} event\n * @param {Mixed} ...\n * @return {Emitter}\n */\n\nEmitter.prototype.emit = function(event){\n  this._callbacks = this._callbacks || {};\n\n  var args = new Array(arguments.length - 1)\n    , callbacks = this._callbacks['$' + event];\n\n  for (var i = 1; i < arguments.length; i++) {\n    args[i - 1] = arguments[i];\n  }\n\n  if (callbacks) {\n    callbacks = callbacks.slice(0);\n    for (var i = 0, len = callbacks.length; i < len; ++i) {\n      callbacks[i].apply(this, args);\n    }\n  }\n\n  return this;\n};\n\n// alias used for reserved events (protected method)\nEmitter.prototype.emitReserved = Emitter.prototype.emit;\n\n/**\n * Return array of callbacks for `event`.\n *\n * @param {String} event\n * @return {Array}\n * @api public\n */\n\nEmitter.prototype.listeners = function(event){\n  this._callbacks = this._callbacks || {};\n  return this._callbacks['$' + event] || [];\n};\n\n/**\n * Check if this emitter has `event` handlers.\n *\n * @param {String} event\n * @return {Boolean}\n * @api public\n */\n\nEmitter.prototype.hasListeners = function(event){\n  return !! this.listeners(event).length;\n};\n","\n/**\n * Expose `Backoff`.\n */\n\nmodule.exports = Backoff;\n\n/**\n * Initialize backoff timer with `opts`.\n *\n * - `min` initial timeout in milliseconds [100]\n * - `max` max timeout [10000]\n * - `jitter` [0]\n * - `factor` [2]\n *\n * @param {Object} opts\n * @api public\n */\n\nfunction Backoff(opts) {\n  opts = opts || {};\n  this.ms = opts.min || 100;\n  this.max = opts.max || 10000;\n  this.factor = opts.factor || 2;\n  this.jitter = opts.jitter > 0 && opts.jitter <= 1 ? opts.jitter : 0;\n  this.attempts = 0;\n}\n\n/**\n * Return the backoff duration.\n *\n * @return {Number}\n * @api public\n */\n\nBackoff.prototype.duration = function(){\n  var ms = this.ms * Math.pow(this.factor, this.attempts++);\n  if (this.jitter) {\n    var rand =  Math.random();\n    var deviation = Math.floor(rand * this.jitter * ms);\n    ms = (Math.floor(rand * 10) & 1) == 0  ? ms - deviation : ms + deviation;\n  }\n  return Math.min(ms, this.max) | 0;\n};\n\n/**\n * Reset the number of attempts.\n *\n * @api public\n */\n\nBackoff.prototype.reset = function(){\n  this.attempts = 0;\n};\n\n/**\n * Set the minimum duration\n *\n * @api public\n */\n\nBackoff.prototype.setMin = function(min){\n  this.ms = min;\n};\n\n/**\n * Set the maximum duration\n *\n * @api public\n */\n\nBackoff.prototype.setMax = function(max){\n  this.max = max;\n};\n\n/**\n * Set the jitter\n *\n * @api public\n */\n\nBackoff.prototype.setJitter = function(jitter){\n  this.jitter = jitter;\n};\n\n","\n/**\n * Module exports.\n *\n * Logic borrowed from Modernizr:\n *\n *   - https://github.com/Modernizr/Modernizr/blob/master/feature-detects/cors.js\n */\n\ntry {\n  module.exports = typeof XMLHttpRequest !== 'undefined' &&\n    'withCredentials' in new XMLHttpRequest();\n} catch (err) {\n  // if XMLHttp support is disabled in IE then it will throw\n  // when trying to create\n  module.exports = false;\n}\n","/**\n * Compiles a querystring\n * Returns string representation of the object\n *\n * @param {Object}\n * @api private\n */\n\nexports.encode = function (obj) {\n  var str = '';\n\n  for (var i in obj) {\n    if (obj.hasOwnProperty(i)) {\n      if (str.length) str += '&';\n      str += encodeURIComponent(i) + '=' + encodeURIComponent(obj[i]);\n    }\n  }\n\n  return str;\n};\n\n/**\n * Parses a simple querystring into an object\n *\n * @param {String} qs\n * @api private\n */\n\nexports.decode = function(qs){\n  var qry = {};\n  var pairs = qs.split('&');\n  for (var i = 0, l = pairs.length; i < l; i++) {\n    var pair = pairs[i].split('=');\n    qry[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);\n  }\n  return qry;\n};\n","/**\n * Parses an URI\n *\n * @author Steven Levithan <stevenlevithan.com> (MIT license)\n * @api private\n */\n\nvar re = /^(?:(?![^:@]+:[^:@\\/]*@)(http|https|ws|wss):\\/\\/)?((?:(([^:@]*)(?::([^:@]*))?)?@)?((?:[a-f0-9]{0,4}:){2,7}[a-f0-9]{0,4}|[^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/;\n\nvar parts = [\n    'source', 'protocol', 'authority', 'userInfo', 'user', 'password', 'host', 'port', 'relative', 'path', 'directory', 'file', 'query', 'anchor'\n];\n\nmodule.exports = function parseuri(str) {\n    var src = str,\n        b = str.indexOf('['),\n        e = str.indexOf(']');\n\n    if (b != -1 && e != -1) {\n        str = str.substring(0, b) + str.substring(b, e).replace(/:/g, ';') + str.substring(e, str.length);\n    }\n\n    var m = re.exec(str || ''),\n        uri = {},\n        i = 14;\n\n    while (i--) {\n        uri[parts[i]] = m[i] || '';\n    }\n\n    if (b != -1 && e != -1) {\n        uri.source = src;\n        uri.host = uri.host.substring(1, uri.host.length - 1).replace(/;/g, ':');\n        uri.authority = uri.authority.replace('[', '').replace(']', '').replace(/;/g, ':');\n        uri.ipv6uri = true;\n    }\n\n    uri.pathNames = pathNames(uri, uri['path']);\n    uri.queryKey = queryKey(uri, uri['query']);\n\n    return uri;\n};\n\nfunction pathNames(obj, path) {\n    var regx = /\\/{2,9}/g,\n        names = path.replace(regx, \"/\").split(\"/\");\n\n    if (path.substr(0, 1) == '/' || path.length === 0) {\n        names.splice(0, 1);\n    }\n    if (path.substr(path.length - 1, 1) == '/') {\n        names.splice(names.length - 1, 1);\n    }\n\n    return names;\n}\n\nfunction queryKey(uri, query) {\n    var data = {};\n\n    query.replace(/(?:^|&)([^&=]*)=?([^&]*)/g, function ($0, $1, $2) {\n        if ($1) {\n            data[$1] = $2;\n        }\n    });\n\n    return data;\n}\n","'use strict';\n\nvar alphabet = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-_'.split('')\n  , length = 64\n  , map = {}\n  , seed = 0\n  , i = 0\n  , prev;\n\n/**\n * Return a string representing the specified number.\n *\n * @param {Number} num The number to convert.\n * @returns {String} The string representation of the number.\n * @api public\n */\nfunction encode(num) {\n  var encoded = '';\n\n  do {\n    encoded = alphabet[num % length] + encoded;\n    num = Math.floor(num / length);\n  } while (num > 0);\n\n  return encoded;\n}\n\n/**\n * Return the integer value specified by the given string.\n *\n * @param {String} str The string to convert.\n * @returns {Number} The integer value represented by the string.\n * @api public\n */\nfunction decode(str) {\n  var decoded = 0;\n\n  for (i = 0; i < str.length; i++) {\n    decoded = decoded * length + map[str.charAt(i)];\n  }\n\n  return decoded;\n}\n\n/**\n * Yeast: A tiny growing id generator.\n *\n * @returns {String} A unique id.\n * @api public\n */\nfunction yeast() {\n  var now = encode(+new Date());\n\n  if (now !== prev) return seed = 0, prev = now;\n  return now +'.'+ encode(seed++);\n}\n\n//\n// Map each character to its index.\n//\nfor (; i < length; i++) map[alphabet[i]] = i;\n\n//\n// Expose the `yeast`, `encode` and `decode` functions.\n//\nyeast.encode = encode;\nyeast.decode = decode;\nmodule.exports = yeast;\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","export default (() => {\n    if (typeof self !== \"undefined\") {\n        return self;\n    }\n    else if (typeof window !== \"undefined\") {\n        return window;\n    }\n    else {\n        return Function(\"return this\")();\n    }\n})();\n","// browser shim for xmlhttprequest module\nimport hasCORS from \"has-cors\";\nimport globalThis from \"../globalThis.js\";\nexport default function (opts) {\n    const xdomain = opts.xdomain;\n    // XMLHttpRequest can be disabled on IE\n    try {\n        if (\"undefined\" !== typeof XMLHttpRequest && (!xdomain || hasCORS)) {\n            return new XMLHttpRequest();\n        }\n    }\n    catch (e) { }\n    if (!xdomain) {\n        try {\n            return new globalThis[[\"Active\"].concat(\"Object\").join(\"X\")](\"Microsoft.XMLHTTP\");\n        }\n        catch (e) { }\n    }\n}\n","import globalThis from \"./globalThis.js\";\nexport function pick(obj, ...attr) {\n    return attr.reduce((acc, k) => {\n        if (obj.hasOwnProperty(k)) {\n            acc[k] = obj[k];\n        }\n        return acc;\n    }, {});\n}\n// Keep a reference to the real timeout functions so they can be used when overridden\nconst NATIVE_SET_TIMEOUT = setTimeout;\nconst NATIVE_CLEAR_TIMEOUT = clearTimeout;\nexport function installTimerFunctions(obj, opts) {\n    if (opts.useNativeTimers) {\n        obj.setTimeoutFn = NATIVE_SET_TIMEOUT.bind(globalThis);\n        obj.clearTimeoutFn = NATIVE_CLEAR_TIMEOUT.bind(globalThis);\n    }\n    else {\n        obj.setTimeoutFn = setTimeout.bind(globalThis);\n        obj.clearTimeoutFn = clearTimeout.bind(globalThis);\n    }\n}\n","const PACKET_TYPES = Object.create(null); // no Map = no polyfill\nPACKET_TYPES[\"open\"] = \"0\";\nPACKET_TYPES[\"close\"] = \"1\";\nPACKET_TYPES[\"ping\"] = \"2\";\nPACKET_TYPES[\"pong\"] = \"3\";\nPACKET_TYPES[\"message\"] = \"4\";\nPACKET_TYPES[\"upgrade\"] = \"5\";\nPACKET_TYPES[\"noop\"] = \"6\";\nconst PACKET_TYPES_REVERSE = Object.create(null);\nObject.keys(PACKET_TYPES).forEach(key => {\n    PACKET_TYPES_REVERSE[PACKET_TYPES[key]] = key;\n});\nconst ERROR_PACKET = { type: \"error\", data: \"parser error\" };\nexport { PACKET_TYPES, PACKET_TYPES_REVERSE, ERROR_PACKET };\n","import { PACKET_TYPES } from \"./commons.js\";\nconst withNativeBlob = typeof Blob === \"function\" ||\n    (typeof Blob !== \"undefined\" &&\n        Object.prototype.toString.call(Blob) === \"[object BlobConstructor]\");\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\n// ArrayBuffer.isView method is not defined in IE10\nconst isView = obj => {\n    return typeof ArrayBuffer.isView === \"function\"\n        ? ArrayBuffer.isView(obj)\n        : obj && obj.buffer instanceof ArrayBuffer;\n};\nconst encodePacket = ({ type, data }, supportsBinary, callback) => {\n    if (withNativeBlob && data instanceof Blob) {\n        if (supportsBinary) {\n            return callback(data);\n        }\n        else {\n            return encodeBlobAsBase64(data, callback);\n        }\n    }\n    else if (withNativeArrayBuffer &&\n        (data instanceof ArrayBuffer || isView(data))) {\n        if (supportsBinary) {\n            return callback(data);\n        }\n        else {\n            return encodeBlobAsBase64(new Blob([data]), callback);\n        }\n    }\n    // plain string\n    return callback(PACKET_TYPES[type] + (data || \"\"));\n};\nconst encodeBlobAsBase64 = (data, callback) => {\n    const fileReader = new FileReader();\n    fileReader.onload = function () {\n        const content = fileReader.result.split(\",\")[1];\n        callback(\"b\" + content);\n    };\n    return fileReader.readAsDataURL(data);\n};\nexport default encodePacket;\n","/*\n * base64-arraybuffer 1.0.1 <https://github.com/niklasvh/base64-arraybuffer>\n * Copyright (c) 2021 Niklas von Hertzen <https://hertzen.com>\n * Released under MIT License\n */\nvar chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n// Use a lookup table to find the index.\nvar lookup = typeof Uint8Array === 'undefined' ? [] : new Uint8Array(256);\nfor (var i = 0; i < chars.length; i++) {\n    lookup[chars.charCodeAt(i)] = i;\n}\nvar encode = function (arraybuffer) {\n    var bytes = new Uint8Array(arraybuffer), i, len = bytes.length, base64 = '';\n    for (i = 0; i < len; i += 3) {\n        base64 += chars[bytes[i] >> 2];\n        base64 += chars[((bytes[i] & 3) << 4) | (bytes[i + 1] >> 4)];\n        base64 += chars[((bytes[i + 1] & 15) << 2) | (bytes[i + 2] >> 6)];\n        base64 += chars[bytes[i + 2] & 63];\n    }\n    if (len % 3 === 2) {\n        base64 = base64.substring(0, base64.length - 1) + '=';\n    }\n    else if (len % 3 === 1) {\n        base64 = base64.substring(0, base64.length - 2) + '==';\n    }\n    return base64;\n};\nvar decode = function (base64) {\n    var bufferLength = base64.length * 0.75, len = base64.length, i, p = 0, encoded1, encoded2, encoded3, encoded4;\n    if (base64[base64.length - 1] === '=') {\n        bufferLength--;\n        if (base64[base64.length - 2] === '=') {\n            bufferLength--;\n        }\n    }\n    var arraybuffer = new ArrayBuffer(bufferLength), bytes = new Uint8Array(arraybuffer);\n    for (i = 0; i < len; i += 4) {\n        encoded1 = lookup[base64.charCodeAt(i)];\n        encoded2 = lookup[base64.charCodeAt(i + 1)];\n        encoded3 = lookup[base64.charCodeAt(i + 2)];\n        encoded4 = lookup[base64.charCodeAt(i + 3)];\n        bytes[p++] = (encoded1 << 2) | (encoded2 >> 4);\n        bytes[p++] = ((encoded2 & 15) << 4) | (encoded3 >> 2);\n        bytes[p++] = ((encoded3 & 3) << 6) | (encoded4 & 63);\n    }\n    return arraybuffer;\n};\n\nexport { decode, encode };\n//# sourceMappingURL=base64-arraybuffer.es5.js.map\n","import { ERROR_PACKET, PACKET_TYPES_REVERSE } from \"./commons.js\";\nimport { decode } from \"base64-arraybuffer\";\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\nconst decodePacket = (encodedPacket, binaryType) => {\n    if (typeof encodedPacket !== \"string\") {\n        return {\n            type: \"message\",\n            data: mapBinary(encodedPacket, binaryType)\n        };\n    }\n    const type = encodedPacket.charAt(0);\n    if (type === \"b\") {\n        return {\n            type: \"message\",\n            data: decodeBase64Packet(encodedPacket.substring(1), binaryType)\n        };\n    }\n    const packetType = PACKET_TYPES_REVERSE[type];\n    if (!packetType) {\n        return ERROR_PACKET;\n    }\n    return encodedPacket.length > 1\n        ? {\n            type: PACKET_TYPES_REVERSE[type],\n            data: encodedPacket.substring(1)\n        }\n        : {\n            type: PACKET_TYPES_REVERSE[type]\n        };\n};\nconst decodeBase64Packet = (data, binaryType) => {\n    if (withNativeArrayBuffer) {\n        const decoded = decode(data);\n        return mapBinary(decoded, binaryType);\n    }\n    else {\n        return { base64: true, data }; // fallback for old browsers\n    }\n};\nconst mapBinary = (data, binaryType) => {\n    switch (binaryType) {\n        case \"blob\":\n            return data instanceof ArrayBuffer ? new Blob([data]) : data;\n        case \"arraybuffer\":\n        default:\n            return data; // assuming the data is already an ArrayBuffer\n    }\n};\nexport default decodePacket;\n","import encodePacket from \"./encodePacket.js\";\nimport decodePacket from \"./decodePacket.js\";\nconst SEPARATOR = String.fromCharCode(30); // see https://en.wikipedia.org/wiki/Delimiter#ASCII_delimited_text\nconst encodePayload = (packets, callback) => {\n    // some packets may be added to the array while encoding, so the initial length must be saved\n    const length = packets.length;\n    const encodedPackets = new Array(length);\n    let count = 0;\n    packets.forEach((packet, i) => {\n        // force base64 encoding for binary packets\n        encodePacket(packet, false, encodedPacket => {\n            encodedPackets[i] = encodedPacket;\n            if (++count === length) {\n                callback(encodedPackets.join(SEPARATOR));\n            }\n        });\n    });\n};\nconst decodePayload = (encodedPayload, binaryType) => {\n    const encodedPackets = encodedPayload.split(SEPARATOR);\n    const packets = [];\n    for (let i = 0; i < encodedPackets.length; i++) {\n        const decodedPacket = decodePacket(encodedPackets[i], binaryType);\n        packets.push(decodedPacket);\n        if (decodedPacket.type === \"error\") {\n            break;\n        }\n    }\n    return packets;\n};\nexport const protocol = 4;\nexport { encodePacket, encodePayload, decodePacket, decodePayload };\n","import { decodePacket } from \"engine.io-parser\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { installTimerFunctions } from \"./util.js\";\nexport class Transport extends Emitter {\n    /**\n     * Transport abstract constructor.\n     *\n     * @param {Object} options.\n     * @api private\n     */\n    constructor(opts) {\n        super();\n        this.writable = false;\n        installTimerFunctions(this, opts);\n        this.opts = opts;\n        this.query = opts.query;\n        this.readyState = \"\";\n        this.socket = opts.socket;\n    }\n    /**\n     * Emits an error.\n     *\n     * @param {String} str\n     * @return {Transport} for chaining\n     * @api protected\n     */\n    onError(msg, desc) {\n        const err = new Error(msg);\n        // @ts-ignore\n        err.type = \"TransportError\";\n        // @ts-ignore\n        err.description = desc;\n        super.emit(\"error\", err);\n        return this;\n    }\n    /**\n     * Opens the transport.\n     *\n     * @api public\n     */\n    open() {\n        if (\"closed\" === this.readyState || \"\" === this.readyState) {\n            this.readyState = \"opening\";\n            this.doOpen();\n        }\n        return this;\n    }\n    /**\n     * Closes the transport.\n     *\n     * @api public\n     */\n    close() {\n        if (\"opening\" === this.readyState || \"open\" === this.readyState) {\n            this.doClose();\n            this.onClose();\n        }\n        return this;\n    }\n    /**\n     * Sends multiple packets.\n     *\n     * @param {Array} packets\n     * @api public\n     */\n    send(packets) {\n        if (\"open\" === this.readyState) {\n            this.write(packets);\n        }\n        else {\n            // this might happen if the transport was silently closed in the beforeunload event handler\n        }\n    }\n    /**\n     * Called upon open\n     *\n     * @api protected\n     */\n    onOpen() {\n        this.readyState = \"open\";\n        this.writable = true;\n        super.emit(\"open\");\n    }\n    /**\n     * Called with data.\n     *\n     * @param {String} data\n     * @api protected\n     */\n    onData(data) {\n        const packet = decodePacket(data, this.socket.binaryType);\n        this.onPacket(packet);\n    }\n    /**\n     * Called with a decoded packet.\n     *\n     * @api protected\n     */\n    onPacket(packet) {\n        super.emit(\"packet\", packet);\n    }\n    /**\n     * Called upon close.\n     *\n     * @api protected\n     */\n    onClose() {\n        this.readyState = \"closed\";\n        super.emit(\"close\");\n    }\n}\n","import { Transport } from \"../transport.js\";\nimport yeast from \"yeast\";\nimport parseqs from \"parseqs\";\nimport { encodePayload, decodePayload } from \"engine.io-parser\";\nexport class Polling extends Transport {\n    constructor() {\n        super(...arguments);\n        this.polling = false;\n    }\n    /**\n     * Transport name.\n     */\n    get name() {\n        return \"polling\";\n    }\n    /**\n     * Opens the socket (triggers polling). We write a PING message to determine\n     * when the transport is open.\n     *\n     * @api private\n     */\n    doOpen() {\n        this.poll();\n    }\n    /**\n     * Pauses polling.\n     *\n     * @param {Function} callback upon buffers are flushed and transport is paused\n     * @api private\n     */\n    pause(onPause) {\n        this.readyState = \"pausing\";\n        const pause = () => {\n            this.readyState = \"paused\";\n            onPause();\n        };\n        if (this.polling || !this.writable) {\n            let total = 0;\n            if (this.polling) {\n                total++;\n                this.once(\"pollComplete\", function () {\n                    --total || pause();\n                });\n            }\n            if (!this.writable) {\n                total++;\n                this.once(\"drain\", function () {\n                    --total || pause();\n                });\n            }\n        }\n        else {\n            pause();\n        }\n    }\n    /**\n     * Starts polling cycle.\n     *\n     * @api public\n     */\n    poll() {\n        this.polling = true;\n        this.doPoll();\n        this.emit(\"poll\");\n    }\n    /**\n     * Overloads onData to detect payloads.\n     *\n     * @api private\n     */\n    onData(data) {\n        const callback = packet => {\n            // if its the first message we consider the transport open\n            if (\"opening\" === this.readyState && packet.type === \"open\") {\n                this.onOpen();\n            }\n            // if its a close packet, we close the ongoing requests\n            if (\"close\" === packet.type) {\n                this.onClose();\n                return false;\n            }\n            // otherwise bypass onData and handle the message\n            this.onPacket(packet);\n        };\n        // decode payload\n        decodePayload(data, this.socket.binaryType).forEach(callback);\n        // if an event did not trigger closing\n        if (\"closed\" !== this.readyState) {\n            // if we got data we're not polling\n            this.polling = false;\n            this.emit(\"pollComplete\");\n            if (\"open\" === this.readyState) {\n                this.poll();\n            }\n            else {\n            }\n        }\n    }\n    /**\n     * For polling, send a close packet.\n     *\n     * @api private\n     */\n    doClose() {\n        const close = () => {\n            this.write([{ type: \"close\" }]);\n        };\n        if (\"open\" === this.readyState) {\n            close();\n        }\n        else {\n            // in case we're trying to close while\n            // handshaking is in progress (GH-164)\n            this.once(\"open\", close);\n        }\n    }\n    /**\n     * Writes a packets payload.\n     *\n     * @param {Array} data packets\n     * @param {Function} drain callback\n     * @api private\n     */\n    write(packets) {\n        this.writable = false;\n        encodePayload(packets, data => {\n            this.doWrite(data, () => {\n                this.writable = true;\n                this.emit(\"drain\");\n            });\n        });\n    }\n    /**\n     * Generates uri for connection.\n     *\n     * @api private\n     */\n    uri() {\n        let query = this.query || {};\n        const schema = this.opts.secure ? \"https\" : \"http\";\n        let port = \"\";\n        // cache busting is forced\n        if (false !== this.opts.timestampRequests) {\n            query[this.opts.timestampParam] = yeast();\n        }\n        if (!this.supportsBinary && !query.sid) {\n            query.b64 = 1;\n        }\n        // avoid port if default for schema\n        if (this.opts.port &&\n            ((\"https\" === schema && Number(this.opts.port) !== 443) ||\n                (\"http\" === schema && Number(this.opts.port) !== 80))) {\n            port = \":\" + this.opts.port;\n        }\n        const encodedQuery = parseqs.encode(query);\n        const ipv6 = this.opts.hostname.indexOf(\":\") !== -1;\n        return (schema +\n            \"://\" +\n            (ipv6 ? \"[\" + this.opts.hostname + \"]\" : this.opts.hostname) +\n            port +\n            this.opts.path +\n            (encodedQuery.length ? \"?\" + encodedQuery : \"\"));\n    }\n}\n","/* global attachEvent */\nimport XMLHttpRequest from \"./xmlhttprequest.js\";\nimport globalThis from \"../globalThis.js\";\nimport { installTimerFunctions, pick } from \"../util.js\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { Polling } from \"./polling.js\";\n/**\n * Empty function\n */\nfunction empty() { }\nconst hasXHR2 = (function () {\n    const xhr = new XMLHttpRequest({\n        xdomain: false\n    });\n    return null != xhr.responseType;\n})();\nexport class XHR extends Polling {\n    /**\n     * XHR Polling constructor.\n     *\n     * @param {Object} opts\n     * @api public\n     */\n    constructor(opts) {\n        super(opts);\n        if (typeof location !== \"undefined\") {\n            const isSSL = \"https:\" === location.protocol;\n            let port = location.port;\n            // some user agents have empty `location.port`\n            if (!port) {\n                port = isSSL ? \"443\" : \"80\";\n            }\n            this.xd =\n                (typeof location !== \"undefined\" &&\n                    opts.hostname !== location.hostname) ||\n                    port !== opts.port;\n            this.xs = opts.secure !== isSSL;\n        }\n        /**\n         * XHR supports binary\n         */\n        const forceBase64 = opts && opts.forceBase64;\n        this.supportsBinary = hasXHR2 && !forceBase64;\n    }\n    /**\n     * Creates a request.\n     *\n     * @param {String} method\n     * @api private\n     */\n    request(opts = {}) {\n        Object.assign(opts, { xd: this.xd, xs: this.xs }, this.opts);\n        return new Request(this.uri(), opts);\n    }\n    /**\n     * Sends data.\n     *\n     * @param {String} data to send.\n     * @param {Function} called upon flush.\n     * @api private\n     */\n    doWrite(data, fn) {\n        const req = this.request({\n            method: \"POST\",\n            data: data\n        });\n        req.on(\"success\", fn);\n        req.on(\"error\", err => {\n            this.onError(\"xhr post error\", err);\n        });\n    }\n    /**\n     * Starts a poll cycle.\n     *\n     * @api private\n     */\n    doPoll() {\n        const req = this.request();\n        req.on(\"data\", this.onData.bind(this));\n        req.on(\"error\", err => {\n            this.onError(\"xhr poll error\", err);\n        });\n        this.pollXhr = req;\n    }\n}\nexport class Request extends Emitter {\n    /**\n     * Request constructor\n     *\n     * @param {Object} options\n     * @api public\n     */\n    constructor(uri, opts) {\n        super();\n        installTimerFunctions(this, opts);\n        this.opts = opts;\n        this.method = opts.method || \"GET\";\n        this.uri = uri;\n        this.async = false !== opts.async;\n        this.data = undefined !== opts.data ? opts.data : null;\n        this.create();\n    }\n    /**\n     * Creates the XHR object and sends the request.\n     *\n     * @api private\n     */\n    create() {\n        const opts = pick(this.opts, \"agent\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"autoUnref\");\n        opts.xdomain = !!this.opts.xd;\n        opts.xscheme = !!this.opts.xs;\n        const xhr = (this.xhr = new XMLHttpRequest(opts));\n        try {\n            xhr.open(this.method, this.uri, this.async);\n            try {\n                if (this.opts.extraHeaders) {\n                    xhr.setDisableHeaderCheck && xhr.setDisableHeaderCheck(true);\n                    for (let i in this.opts.extraHeaders) {\n                        if (this.opts.extraHeaders.hasOwnProperty(i)) {\n                            xhr.setRequestHeader(i, this.opts.extraHeaders[i]);\n                        }\n                    }\n                }\n            }\n            catch (e) { }\n            if (\"POST\" === this.method) {\n                try {\n                    xhr.setRequestHeader(\"Content-type\", \"text/plain;charset=UTF-8\");\n                }\n                catch (e) { }\n            }\n            try {\n                xhr.setRequestHeader(\"Accept\", \"*/*\");\n            }\n            catch (e) { }\n            // ie6 check\n            if (\"withCredentials\" in xhr) {\n                xhr.withCredentials = this.opts.withCredentials;\n            }\n            if (this.opts.requestTimeout) {\n                xhr.timeout = this.opts.requestTimeout;\n            }\n            xhr.onreadystatechange = () => {\n                if (4 !== xhr.readyState)\n                    return;\n                if (200 === xhr.status || 1223 === xhr.status) {\n                    this.onLoad();\n                }\n                else {\n                    // make sure the `error` event handler that's user-set\n                    // does not throw in the same tick and gets caught here\n                    this.setTimeoutFn(() => {\n                        this.onError(typeof xhr.status === \"number\" ? xhr.status : 0);\n                    }, 0);\n                }\n            };\n            xhr.send(this.data);\n        }\n        catch (e) {\n            // Need to defer since .create() is called directly from the constructor\n            // and thus the 'error' event can only be only bound *after* this exception\n            // occurs.  Therefore, also, we cannot throw here at all.\n            this.setTimeoutFn(() => {\n                this.onError(e);\n            }, 0);\n            return;\n        }\n        if (typeof document !== \"undefined\") {\n            this.index = Request.requestsCount++;\n            Request.requests[this.index] = this;\n        }\n    }\n    /**\n     * Called upon successful response.\n     *\n     * @api private\n     */\n    onSuccess() {\n        this.emit(\"success\");\n        this.cleanup();\n    }\n    /**\n     * Called if we have data.\n     *\n     * @api private\n     */\n    onData(data) {\n        this.emit(\"data\", data);\n        this.onSuccess();\n    }\n    /**\n     * Called upon error.\n     *\n     * @api private\n     */\n    onError(err) {\n        this.emit(\"error\", err);\n        this.cleanup(true);\n    }\n    /**\n     * Cleans up house.\n     *\n     * @api private\n     */\n    cleanup(fromError) {\n        if (\"undefined\" === typeof this.xhr || null === this.xhr) {\n            return;\n        }\n        this.xhr.onreadystatechange = empty;\n        if (fromError) {\n            try {\n                this.xhr.abort();\n            }\n            catch (e) { }\n        }\n        if (typeof document !== \"undefined\") {\n            delete Request.requests[this.index];\n        }\n        this.xhr = null;\n    }\n    /**\n     * Called upon load.\n     *\n     * @api private\n     */\n    onLoad() {\n        const data = this.xhr.responseText;\n        if (data !== null) {\n            this.onData(data);\n        }\n    }\n    /**\n     * Aborts the request.\n     *\n     * @api public\n     */\n    abort() {\n        this.cleanup();\n    }\n}\nRequest.requestsCount = 0;\nRequest.requests = {};\n/**\n * Aborts pending requests when unloading the window. This is needed to prevent\n * memory leaks (e.g. when using IE) and to ensure that no spurious error is\n * emitted.\n */\nif (typeof document !== \"undefined\") {\n    // @ts-ignore\n    if (typeof attachEvent === \"function\") {\n        // @ts-ignore\n        attachEvent(\"onunload\", unloadHandler);\n    }\n    else if (typeof addEventListener === \"function\") {\n        const terminationEvent = \"onpagehide\" in globalThis ? \"pagehide\" : \"unload\";\n        addEventListener(terminationEvent, unloadHandler, false);\n    }\n}\nfunction unloadHandler() {\n    for (let i in Request.requests) {\n        if (Request.requests.hasOwnProperty(i)) {\n            Request.requests[i].abort();\n        }\n    }\n}\n","import globalThis from \"../globalThis.js\";\nexport const nextTick = (() => {\n    const isPromiseAvailable = typeof Promise === \"function\" && typeof Promise.resolve === \"function\";\n    if (isPromiseAvailable) {\n        return cb => Promise.resolve().then(cb);\n    }\n    else {\n        return (cb, setTimeoutFn) => setTimeoutFn(cb, 0);\n    }\n})();\nexport const WebSocket = globalThis.WebSocket || globalThis.MozWebSocket;\nexport const usingBrowserWebSocket = true;\nexport const defaultBinaryType = \"arraybuffer\";\n","import { Transport } from \"../transport.js\";\nimport parseqs from \"parseqs\";\nimport yeast from \"yeast\";\nimport { pick } from \"../util.js\";\nimport { defaultBinaryType, nextTick, usingBrowserWebSocket, WebSocket } from \"./websocket-constructor.js\";\nimport { encodePacket } from \"engine.io-parser\";\n// detect ReactNative environment\nconst isReactNative = typeof navigator !== \"undefined\" &&\n    typeof navigator.product === \"string\" &&\n    navigator.product.toLowerCase() === \"reactnative\";\nexport class WS extends Transport {\n    /**\n     * WebSocket transport constructor.\n     *\n     * @api {Object} connection options\n     * @api public\n     */\n    constructor(opts) {\n        super(opts);\n        this.supportsBinary = !opts.forceBase64;\n    }\n    /**\n     * Transport name.\n     *\n     * @api public\n     */\n    get name() {\n        return \"websocket\";\n    }\n    /**\n     * Opens socket.\n     *\n     * @api private\n     */\n    doOpen() {\n        if (!this.check()) {\n            // let probe timeout\n            return;\n        }\n        const uri = this.uri();\n        const protocols = this.opts.protocols;\n        // React Native only supports the 'headers' option, and will print a warning if anything else is passed\n        const opts = isReactNative\n            ? {}\n            : pick(this.opts, \"agent\", \"perMessageDeflate\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"localAddress\", \"protocolVersion\", \"origin\", \"maxPayload\", \"family\", \"checkServerIdentity\");\n        if (this.opts.extraHeaders) {\n            opts.headers = this.opts.extraHeaders;\n        }\n        try {\n            this.ws =\n                usingBrowserWebSocket && !isReactNative\n                    ? protocols\n                        ? new WebSocket(uri, protocols)\n                        : new WebSocket(uri)\n                    : new WebSocket(uri, protocols, opts);\n        }\n        catch (err) {\n            return this.emit(\"error\", err);\n        }\n        this.ws.binaryType = this.socket.binaryType || defaultBinaryType;\n        this.addEventListeners();\n    }\n    /**\n     * Adds event listeners to the socket\n     *\n     * @api private\n     */\n    addEventListeners() {\n        this.ws.onopen = () => {\n            if (this.opts.autoUnref) {\n                this.ws._socket.unref();\n            }\n            this.onOpen();\n        };\n        this.ws.onclose = this.onClose.bind(this);\n        this.ws.onmessage = ev => this.onData(ev.data);\n        this.ws.onerror = e => this.onError(\"websocket error\", e);\n    }\n    /**\n     * Writes data to socket.\n     *\n     * @param {Array} array of packets.\n     * @api private\n     */\n    write(packets) {\n        this.writable = false;\n        // encodePacket efficient as it uses WS framing\n        // no need for encodePayload\n        for (let i = 0; i < packets.length; i++) {\n            const packet = packets[i];\n            const lastPacket = i === packets.length - 1;\n            encodePacket(packet, this.supportsBinary, data => {\n                // always create a new object (GH-437)\n                const opts = {};\n                if (!usingBrowserWebSocket) {\n                    if (packet.options) {\n                        opts.compress = packet.options.compress;\n                    }\n                    if (this.opts.perMessageDeflate) {\n                        const len = \"string\" === typeof data ? Buffer.byteLength(data) : data.length;\n                        if (len < this.opts.perMessageDeflate.threshold) {\n                            opts.compress = false;\n                        }\n                    }\n                }\n                // Sometimes the websocket has already been closed but the browser didn't\n                // have a chance of informing us about it yet, in that case send will\n                // throw an error\n                try {\n                    if (usingBrowserWebSocket) {\n                        // TypeError is thrown when passing the second argument on Safari\n                        this.ws.send(data);\n                    }\n                    else {\n                        this.ws.send(data, opts);\n                    }\n                }\n                catch (e) {\n                }\n                if (lastPacket) {\n                    // fake drain\n                    // defer to next tick to allow Socket to clear writeBuffer\n                    nextTick(() => {\n                        this.writable = true;\n                        this.emit(\"drain\");\n                    }, this.setTimeoutFn);\n                }\n            });\n        }\n    }\n    /**\n     * Closes socket.\n     *\n     * @api private\n     */\n    doClose() {\n        if (typeof this.ws !== \"undefined\") {\n            this.ws.close();\n            this.ws = null;\n        }\n    }\n    /**\n     * Generates uri for connection.\n     *\n     * @api private\n     */\n    uri() {\n        let query = this.query || {};\n        const schema = this.opts.secure ? \"wss\" : \"ws\";\n        let port = \"\";\n        // avoid port if default for schema\n        if (this.opts.port &&\n            ((\"wss\" === schema && Number(this.opts.port) !== 443) ||\n                (\"ws\" === schema && Number(this.opts.port) !== 80))) {\n            port = \":\" + this.opts.port;\n        }\n        // append timestamp to URI\n        if (this.opts.timestampRequests) {\n            query[this.opts.timestampParam] = yeast();\n        }\n        // communicate binary support capabilities\n        if (!this.supportsBinary) {\n            query.b64 = 1;\n        }\n        const encodedQuery = parseqs.encode(query);\n        const ipv6 = this.opts.hostname.indexOf(\":\") !== -1;\n        return (schema +\n            \"://\" +\n            (ipv6 ? \"[\" + this.opts.hostname + \"]\" : this.opts.hostname) +\n            port +\n            this.opts.path +\n            (encodedQuery.length ? \"?\" + encodedQuery : \"\"));\n    }\n    /**\n     * Feature detection for WebSocket.\n     *\n     * @return {Boolean} whether this transport is available.\n     * @api public\n     */\n    check() {\n        return (!!WebSocket &&\n            !(\"__initialize\" in WebSocket && this.name === WS.prototype.name));\n    }\n}\n","import { XHR } from \"./polling-xhr.js\";\nimport { WS } from \"./websocket.js\";\nexport const transports = {\n    websocket: WS,\n    polling: XHR\n};\n","import { transports } from \"./transports/index.js\";\nimport { installTimerFunctions } from \"./util.js\";\nimport parseqs from \"parseqs\";\nimport parseuri from \"parseuri\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { protocol } from \"engine.io-parser\";\nexport class Socket extends Emitter {\n    /**\n     * Socket constructor.\n     *\n     * @param {String|Object} uri or options\n     * @param {Object} opts - options\n     * @api public\n     */\n    constructor(uri, opts = {}) {\n        super();\n        if (uri && \"object\" === typeof uri) {\n            opts = uri;\n            uri = null;\n        }\n        if (uri) {\n            uri = parseuri(uri);\n            opts.hostname = uri.host;\n            opts.secure = uri.protocol === \"https\" || uri.protocol === \"wss\";\n            opts.port = uri.port;\n            if (uri.query)\n                opts.query = uri.query;\n        }\n        else if (opts.host) {\n            opts.hostname = parseuri(opts.host).host;\n        }\n        installTimerFunctions(this, opts);\n        this.secure =\n            null != opts.secure\n                ? opts.secure\n                : typeof location !== \"undefined\" && \"https:\" === location.protocol;\n        if (opts.hostname && !opts.port) {\n            // if no port is specified manually, use the protocol default\n            opts.port = this.secure ? \"443\" : \"80\";\n        }\n        this.hostname =\n            opts.hostname ||\n                (typeof location !== \"undefined\" ? location.hostname : \"localhost\");\n        this.port =\n            opts.port ||\n                (typeof location !== \"undefined\" && location.port\n                    ? location.port\n                    : this.secure\n                        ? \"443\"\n                        : \"80\");\n        this.transports = opts.transports || [\"polling\", \"websocket\"];\n        this.readyState = \"\";\n        this.writeBuffer = [];\n        this.prevBufferLen = 0;\n        this.opts = Object.assign({\n            path: \"/engine.io\",\n            agent: false,\n            withCredentials: false,\n            upgrade: true,\n            timestampParam: \"t\",\n            rememberUpgrade: false,\n            rejectUnauthorized: true,\n            perMessageDeflate: {\n                threshold: 1024\n            },\n            transportOptions: {},\n            closeOnBeforeunload: true\n        }, opts);\n        this.opts.path = this.opts.path.replace(/\\/$/, \"\") + \"/\";\n        if (typeof this.opts.query === \"string\") {\n            this.opts.query = parseqs.decode(this.opts.query);\n        }\n        // set on handshake\n        this.id = null;\n        this.upgrades = null;\n        this.pingInterval = null;\n        this.pingTimeout = null;\n        // set on heartbeat\n        this.pingTimeoutTimer = null;\n        if (typeof addEventListener === \"function\") {\n            if (this.opts.closeOnBeforeunload) {\n                // Firefox closes the connection when the \"beforeunload\" event is emitted but not Chrome. This event listener\n                // ensures every browser behaves the same (no \"disconnect\" event at the Socket.IO level when the page is\n                // closed/reloaded)\n                addEventListener(\"beforeunload\", () => {\n                    if (this.transport) {\n                        // silently close the transport\n                        this.transport.removeAllListeners();\n                        this.transport.close();\n                    }\n                }, false);\n            }\n            if (this.hostname !== \"localhost\") {\n                this.offlineEventListener = () => {\n                    this.onClose(\"transport close\");\n                };\n                addEventListener(\"offline\", this.offlineEventListener, false);\n            }\n        }\n        this.open();\n    }\n    /**\n     * Creates transport of the given type.\n     *\n     * @param {String} transport name\n     * @return {Transport}\n     * @api private\n     */\n    createTransport(name) {\n        const query = clone(this.opts.query);\n        // append engine.io protocol identifier\n        query.EIO = protocol;\n        // transport name\n        query.transport = name;\n        // session id if we already have one\n        if (this.id)\n            query.sid = this.id;\n        const opts = Object.assign({}, this.opts.transportOptions[name], this.opts, {\n            query,\n            socket: this,\n            hostname: this.hostname,\n            secure: this.secure,\n            port: this.port\n        });\n        return new transports[name](opts);\n    }\n    /**\n     * Initializes transport to use and starts probe.\n     *\n     * @api private\n     */\n    open() {\n        let transport;\n        if (this.opts.rememberUpgrade &&\n            Socket.priorWebsocketSuccess &&\n            this.transports.indexOf(\"websocket\") !== -1) {\n            transport = \"websocket\";\n        }\n        else if (0 === this.transports.length) {\n            // Emit error on next tick so it can be listened to\n            this.setTimeoutFn(() => {\n                this.emitReserved(\"error\", \"No transports available\");\n            }, 0);\n            return;\n        }\n        else {\n            transport = this.transports[0];\n        }\n        this.readyState = \"opening\";\n        // Retry with the next transport if the transport is disabled (jsonp: false)\n        try {\n            transport = this.createTransport(transport);\n        }\n        catch (e) {\n            this.transports.shift();\n            this.open();\n            return;\n        }\n        transport.open();\n        this.setTransport(transport);\n    }\n    /**\n     * Sets the current transport. Disables the existing one (if any).\n     *\n     * @api private\n     */\n    setTransport(transport) {\n        if (this.transport) {\n            this.transport.removeAllListeners();\n        }\n        // set up transport\n        this.transport = transport;\n        // set up transport listeners\n        transport\n            .on(\"drain\", this.onDrain.bind(this))\n            .on(\"packet\", this.onPacket.bind(this))\n            .on(\"error\", this.onError.bind(this))\n            .on(\"close\", () => {\n            this.onClose(\"transport close\");\n        });\n    }\n    /**\n     * Probes a transport.\n     *\n     * @param {String} transport name\n     * @api private\n     */\n    probe(name) {\n        let transport = this.createTransport(name);\n        let failed = false;\n        Socket.priorWebsocketSuccess = false;\n        const onTransportOpen = () => {\n            if (failed)\n                return;\n            transport.send([{ type: \"ping\", data: \"probe\" }]);\n            transport.once(\"packet\", msg => {\n                if (failed)\n                    return;\n                if (\"pong\" === msg.type && \"probe\" === msg.data) {\n                    this.upgrading = true;\n                    this.emitReserved(\"upgrading\", transport);\n                    if (!transport)\n                        return;\n                    Socket.priorWebsocketSuccess = \"websocket\" === transport.name;\n                    this.transport.pause(() => {\n                        if (failed)\n                            return;\n                        if (\"closed\" === this.readyState)\n                            return;\n                        cleanup();\n                        this.setTransport(transport);\n                        transport.send([{ type: \"upgrade\" }]);\n                        this.emitReserved(\"upgrade\", transport);\n                        transport = null;\n                        this.upgrading = false;\n                        this.flush();\n                    });\n                }\n                else {\n                    const err = new Error(\"probe error\");\n                    // @ts-ignore\n                    err.transport = transport.name;\n                    this.emitReserved(\"upgradeError\", err);\n                }\n            });\n        };\n        function freezeTransport() {\n            if (failed)\n                return;\n            // Any callback called by transport should be ignored since now\n            failed = true;\n            cleanup();\n            transport.close();\n            transport = null;\n        }\n        // Handle any error that happens while probing\n        const onerror = err => {\n            const error = new Error(\"probe error: \" + err);\n            // @ts-ignore\n            error.transport = transport.name;\n            freezeTransport();\n            this.emitReserved(\"upgradeError\", error);\n        };\n        function onTransportClose() {\n            onerror(\"transport closed\");\n        }\n        // When the socket is closed while we're probing\n        function onclose() {\n            onerror(\"socket closed\");\n        }\n        // When the socket is upgraded while we're probing\n        function onupgrade(to) {\n            if (transport && to.name !== transport.name) {\n                freezeTransport();\n            }\n        }\n        // Remove all listeners on the transport and on self\n        const cleanup = () => {\n            transport.removeListener(\"open\", onTransportOpen);\n            transport.removeListener(\"error\", onerror);\n            transport.removeListener(\"close\", onTransportClose);\n            this.off(\"close\", onclose);\n            this.off(\"upgrading\", onupgrade);\n        };\n        transport.once(\"open\", onTransportOpen);\n        transport.once(\"error\", onerror);\n        transport.once(\"close\", onTransportClose);\n        this.once(\"close\", onclose);\n        this.once(\"upgrading\", onupgrade);\n        transport.open();\n    }\n    /**\n     * Called when connection is deemed open.\n     *\n     * @api private\n     */\n    onOpen() {\n        this.readyState = \"open\";\n        Socket.priorWebsocketSuccess = \"websocket\" === this.transport.name;\n        this.emitReserved(\"open\");\n        this.flush();\n        // we check for `readyState` in case an `open`\n        // listener already closed the socket\n        if (\"open\" === this.readyState &&\n            this.opts.upgrade &&\n            this.transport.pause) {\n            let i = 0;\n            const l = this.upgrades.length;\n            for (; i < l; i++) {\n                this.probe(this.upgrades[i]);\n            }\n        }\n    }\n    /**\n     * Handles a packet.\n     *\n     * @api private\n     */\n    onPacket(packet) {\n        if (\"opening\" === this.readyState ||\n            \"open\" === this.readyState ||\n            \"closing\" === this.readyState) {\n            this.emitReserved(\"packet\", packet);\n            // Socket is live - any packet counts\n            this.emitReserved(\"heartbeat\");\n            switch (packet.type) {\n                case \"open\":\n                    this.onHandshake(JSON.parse(packet.data));\n                    break;\n                case \"ping\":\n                    this.resetPingTimeout();\n                    this.sendPacket(\"pong\");\n                    this.emitReserved(\"ping\");\n                    this.emitReserved(\"pong\");\n                    break;\n                case \"error\":\n                    const err = new Error(\"server error\");\n                    // @ts-ignore\n                    err.code = packet.data;\n                    this.onError(err);\n                    break;\n                case \"message\":\n                    this.emitReserved(\"data\", packet.data);\n                    this.emitReserved(\"message\", packet.data);\n                    break;\n            }\n        }\n        else {\n        }\n    }\n    /**\n     * Called upon handshake completion.\n     *\n     * @param {Object} data - handshake obj\n     * @api private\n     */\n    onHandshake(data) {\n        this.emitReserved(\"handshake\", data);\n        this.id = data.sid;\n        this.transport.query.sid = data.sid;\n        this.upgrades = this.filterUpgrades(data.upgrades);\n        this.pingInterval = data.pingInterval;\n        this.pingTimeout = data.pingTimeout;\n        this.onOpen();\n        // In case open handler closes socket\n        if (\"closed\" === this.readyState)\n            return;\n        this.resetPingTimeout();\n    }\n    /**\n     * Sets and resets ping timeout timer based on server pings.\n     *\n     * @api private\n     */\n    resetPingTimeout() {\n        this.clearTimeoutFn(this.pingTimeoutTimer);\n        this.pingTimeoutTimer = this.setTimeoutFn(() => {\n            this.onClose(\"ping timeout\");\n        }, this.pingInterval + this.pingTimeout);\n        if (this.opts.autoUnref) {\n            this.pingTimeoutTimer.unref();\n        }\n    }\n    /**\n     * Called on `drain` event\n     *\n     * @api private\n     */\n    onDrain() {\n        this.writeBuffer.splice(0, this.prevBufferLen);\n        // setting prevBufferLen = 0 is very important\n        // for example, when upgrading, upgrade packet is sent over,\n        // and a nonzero prevBufferLen could cause problems on `drain`\n        this.prevBufferLen = 0;\n        if (0 === this.writeBuffer.length) {\n            this.emitReserved(\"drain\");\n        }\n        else {\n            this.flush();\n        }\n    }\n    /**\n     * Flush write buffers.\n     *\n     * @api private\n     */\n    flush() {\n        if (\"closed\" !== this.readyState &&\n            this.transport.writable &&\n            !this.upgrading &&\n            this.writeBuffer.length) {\n            this.transport.send(this.writeBuffer);\n            // keep track of current length of writeBuffer\n            // splice writeBuffer and callbackBuffer on `drain`\n            this.prevBufferLen = this.writeBuffer.length;\n            this.emitReserved(\"flush\");\n        }\n    }\n    /**\n     * Sends a message.\n     *\n     * @param {String} message.\n     * @param {Function} callback function.\n     * @param {Object} options.\n     * @return {Socket} for chaining.\n     * @api public\n     */\n    write(msg, options, fn) {\n        this.sendPacket(\"message\", msg, options, fn);\n        return this;\n    }\n    send(msg, options, fn) {\n        this.sendPacket(\"message\", msg, options, fn);\n        return this;\n    }\n    /**\n     * Sends a packet.\n     *\n     * @param {String} packet type.\n     * @param {String} data.\n     * @param {Object} options.\n     * @param {Function} callback function.\n     * @api private\n     */\n    sendPacket(type, data, options, fn) {\n        if (\"function\" === typeof data) {\n            fn = data;\n            data = undefined;\n        }\n        if (\"function\" === typeof options) {\n            fn = options;\n            options = null;\n        }\n        if (\"closing\" === this.readyState || \"closed\" === this.readyState) {\n            return;\n        }\n        options = options || {};\n        options.compress = false !== options.compress;\n        const packet = {\n            type: type,\n            data: data,\n            options: options\n        };\n        this.emitReserved(\"packetCreate\", packet);\n        this.writeBuffer.push(packet);\n        if (fn)\n            this.once(\"flush\", fn);\n        this.flush();\n    }\n    /**\n     * Closes the connection.\n     *\n     * @api public\n     */\n    close() {\n        const close = () => {\n            this.onClose(\"forced close\");\n            this.transport.close();\n        };\n        const cleanupAndClose = () => {\n            this.off(\"upgrade\", cleanupAndClose);\n            this.off(\"upgradeError\", cleanupAndClose);\n            close();\n        };\n        const waitForUpgrade = () => {\n            // wait for upgrade to finish since we can't send packets while pausing a transport\n            this.once(\"upgrade\", cleanupAndClose);\n            this.once(\"upgradeError\", cleanupAndClose);\n        };\n        if (\"opening\" === this.readyState || \"open\" === this.readyState) {\n            this.readyState = \"closing\";\n            if (this.writeBuffer.length) {\n                this.once(\"drain\", () => {\n                    if (this.upgrading) {\n                        waitForUpgrade();\n                    }\n                    else {\n                        close();\n                    }\n                });\n            }\n            else if (this.upgrading) {\n                waitForUpgrade();\n            }\n            else {\n                close();\n            }\n        }\n        return this;\n    }\n    /**\n     * Called upon transport error\n     *\n     * @api private\n     */\n    onError(err) {\n        Socket.priorWebsocketSuccess = false;\n        this.emitReserved(\"error\", err);\n        this.onClose(\"transport error\", err);\n    }\n    /**\n     * Called upon transport close.\n     *\n     * @api private\n     */\n    onClose(reason, desc) {\n        if (\"opening\" === this.readyState ||\n            \"open\" === this.readyState ||\n            \"closing\" === this.readyState) {\n            // clear timers\n            this.clearTimeoutFn(this.pingTimeoutTimer);\n            // stop event from firing again for transport\n            this.transport.removeAllListeners(\"close\");\n            // ensure transport won't stay open\n            this.transport.close();\n            // ignore further transport communication\n            this.transport.removeAllListeners();\n            if (typeof removeEventListener === \"function\") {\n                removeEventListener(\"offline\", this.offlineEventListener, false);\n            }\n            // set ready state\n            this.readyState = \"closed\";\n            // clear session id\n            this.id = null;\n            // emit close event\n            this.emitReserved(\"close\", reason, desc);\n            // clean buffers after, so users can still\n            // grab the buffers on `close` event\n            this.writeBuffer = [];\n            this.prevBufferLen = 0;\n        }\n    }\n    /**\n     * Filters upgrades, returning only those matching client transports.\n     *\n     * @param {Array} server upgrades\n     * @api private\n     *\n     */\n    filterUpgrades(upgrades) {\n        const filteredUpgrades = [];\n        let i = 0;\n        const j = upgrades.length;\n        for (; i < j; i++) {\n            if (~this.transports.indexOf(upgrades[i]))\n                filteredUpgrades.push(upgrades[i]);\n        }\n        return filteredUpgrades;\n    }\n}\nSocket.protocol = protocol;\nfunction clone(obj) {\n    const o = {};\n    for (let i in obj) {\n        if (obj.hasOwnProperty(i)) {\n            o[i] = obj[i];\n        }\n    }\n    return o;\n}\n","import { Socket } from \"./socket.js\";\nexport { Socket };\nexport const protocol = Socket.protocol;\nexport { Transport } from \"./transport.js\";\nexport { transports } from \"./transports/index.js\";\nexport { installTimerFunctions } from \"./util.js\";\n","const withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\nconst isView = (obj) => {\n    return typeof ArrayBuffer.isView === \"function\"\n        ? ArrayBuffer.isView(obj)\n        : obj.buffer instanceof ArrayBuffer;\n};\nconst toString = Object.prototype.toString;\nconst withNativeBlob = typeof Blob === \"function\" ||\n    (typeof Blob !== \"undefined\" &&\n        toString.call(Blob) === \"[object BlobConstructor]\");\nconst withNativeFile = typeof File === \"function\" ||\n    (typeof File !== \"undefined\" &&\n        toString.call(File) === \"[object FileConstructor]\");\n/**\n * Returns true if obj is a Buffer, an ArrayBuffer, a Blob or a File.\n *\n * @private\n */\nexport function isBinary(obj) {\n    return ((withNativeArrayBuffer && (obj instanceof ArrayBuffer || isView(obj))) ||\n        (withNativeBlob && obj instanceof Blob) ||\n        (withNativeFile && obj instanceof File));\n}\nexport function hasBinary(obj, toJSON) {\n    if (!obj || typeof obj !== \"object\") {\n        return false;\n    }\n    if (Array.isArray(obj)) {\n        for (let i = 0, l = obj.length; i < l; i++) {\n            if (hasBinary(obj[i])) {\n                return true;\n            }\n        }\n        return false;\n    }\n    if (isBinary(obj)) {\n        return true;\n    }\n    if (obj.toJSON &&\n        typeof obj.toJSON === \"function\" &&\n        arguments.length === 1) {\n        return hasBinary(obj.toJSON(), true);\n    }\n    for (const key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key) && hasBinary(obj[key])) {\n            return true;\n        }\n    }\n    return false;\n}\n","import { isBinary } from \"./is-binary.js\";\n/**\n * Replaces every Buffer | ArrayBuffer | Blob | File in packet with a numbered placeholder.\n *\n * @param {Object} packet - socket.io event packet\n * @return {Object} with deconstructed packet and list of buffers\n * @public\n */\nexport function deconstructPacket(packet) {\n    const buffers = [];\n    const packetData = packet.data;\n    const pack = packet;\n    pack.data = _deconstructPacket(packetData, buffers);\n    pack.attachments = buffers.length; // number of binary 'attachments'\n    return { packet: pack, buffers: buffers };\n}\nfunction _deconstructPacket(data, buffers) {\n    if (!data)\n        return data;\n    if (isBinary(data)) {\n        const placeholder = { _placeholder: true, num: buffers.length };\n        buffers.push(data);\n        return placeholder;\n    }\n    else if (Array.isArray(data)) {\n        const newData = new Array(data.length);\n        for (let i = 0; i < data.length; i++) {\n            newData[i] = _deconstructPacket(data[i], buffers);\n        }\n        return newData;\n    }\n    else if (typeof data === \"object\" && !(data instanceof Date)) {\n        const newData = {};\n        for (const key in data) {\n            if (data.hasOwnProperty(key)) {\n                newData[key] = _deconstructPacket(data[key], buffers);\n            }\n        }\n        return newData;\n    }\n    return data;\n}\n/**\n * Reconstructs a binary packet from its placeholder packet and buffers\n *\n * @param {Object} packet - event packet with placeholders\n * @param {Array} buffers - binary buffers to put in placeholder positions\n * @return {Object} reconstructed packet\n * @public\n */\nexport function reconstructPacket(packet, buffers) {\n    packet.data = _reconstructPacket(packet.data, buffers);\n    packet.attachments = undefined; // no longer useful\n    return packet;\n}\nfunction _reconstructPacket(data, buffers) {\n    if (!data)\n        return data;\n    if (data && data._placeholder) {\n        return buffers[data.num]; // appropriate buffer (should be natural order anyway)\n    }\n    else if (Array.isArray(data)) {\n        for (let i = 0; i < data.length; i++) {\n            data[i] = _reconstructPacket(data[i], buffers);\n        }\n    }\n    else if (typeof data === \"object\") {\n        for (const key in data) {\n            if (data.hasOwnProperty(key)) {\n                data[key] = _reconstructPacket(data[key], buffers);\n            }\n        }\n    }\n    return data;\n}\n","import { Emitter } from \"@socket.io/component-emitter\";\nimport { deconstructPacket, reconstructPacket } from \"./binary.js\";\nimport { isBinary, hasBinary } from \"./is-binary.js\";\n/**\n * Protocol version.\n *\n * @public\n */\nexport const protocol = 5;\nexport var PacketType;\n(function (PacketType) {\n    PacketType[PacketType[\"CONNECT\"] = 0] = \"CONNECT\";\n    PacketType[PacketType[\"DISCONNECT\"] = 1] = \"DISCONNECT\";\n    PacketType[PacketType[\"EVENT\"] = 2] = \"EVENT\";\n    PacketType[PacketType[\"ACK\"] = 3] = \"ACK\";\n    PacketType[PacketType[\"CONNECT_ERROR\"] = 4] = \"CONNECT_ERROR\";\n    PacketType[PacketType[\"BINARY_EVENT\"] = 5] = \"BINARY_EVENT\";\n    PacketType[PacketType[\"BINARY_ACK\"] = 6] = \"BINARY_ACK\";\n})(PacketType || (PacketType = {}));\n/**\n * A socket.io Encoder instance\n */\nexport class Encoder {\n    /**\n     * Encode a packet as a single string if non-binary, or as a\n     * buffer sequence, depending on packet type.\n     *\n     * @param {Object} obj - packet object\n     */\n    encode(obj) {\n        if (obj.type === PacketType.EVENT || obj.type === PacketType.ACK) {\n            if (hasBinary(obj)) {\n                obj.type =\n                    obj.type === PacketType.EVENT\n                        ? PacketType.BINARY_EVENT\n                        : PacketType.BINARY_ACK;\n                return this.encodeAsBinary(obj);\n            }\n        }\n        return [this.encodeAsString(obj)];\n    }\n    /**\n     * Encode packet as string.\n     */\n    encodeAsString(obj) {\n        // first is type\n        let str = \"\" + obj.type;\n        // attachments if we have them\n        if (obj.type === PacketType.BINARY_EVENT ||\n            obj.type === PacketType.BINARY_ACK) {\n            str += obj.attachments + \"-\";\n        }\n        // if we have a namespace other than `/`\n        // we append it followed by a comma `,`\n        if (obj.nsp && \"/\" !== obj.nsp) {\n            str += obj.nsp + \",\";\n        }\n        // immediately followed by the id\n        if (null != obj.id) {\n            str += obj.id;\n        }\n        // json data\n        if (null != obj.data) {\n            str += JSON.stringify(obj.data);\n        }\n        return str;\n    }\n    /**\n     * Encode packet as 'buffer sequence' by removing blobs, and\n     * deconstructing packet into object with placeholders and\n     * a list of buffers.\n     */\n    encodeAsBinary(obj) {\n        const deconstruction = deconstructPacket(obj);\n        const pack = this.encodeAsString(deconstruction.packet);\n        const buffers = deconstruction.buffers;\n        buffers.unshift(pack); // add packet info to beginning of data list\n        return buffers; // write all the buffers\n    }\n}\n/**\n * A socket.io Decoder instance\n *\n * @return {Object} decoder\n */\nexport class Decoder extends Emitter {\n    constructor() {\n        super();\n    }\n    /**\n     * Decodes an encoded packet string into packet JSON.\n     *\n     * @param {String} obj - encoded packet\n     */\n    add(obj) {\n        let packet;\n        if (typeof obj === \"string\") {\n            packet = this.decodeString(obj);\n            if (packet.type === PacketType.BINARY_EVENT ||\n                packet.type === PacketType.BINARY_ACK) {\n                // binary packet's json\n                this.reconstructor = new BinaryReconstructor(packet);\n                // no attachments, labeled binary but no binary data to follow\n                if (packet.attachments === 0) {\n                    super.emitReserved(\"decoded\", packet);\n                }\n            }\n            else {\n                // non-binary full packet\n                super.emitReserved(\"decoded\", packet);\n            }\n        }\n        else if (isBinary(obj) || obj.base64) {\n            // raw binary data\n            if (!this.reconstructor) {\n                throw new Error(\"got binary data when not reconstructing a packet\");\n            }\n            else {\n                packet = this.reconstructor.takeBinaryData(obj);\n                if (packet) {\n                    // received final buffer\n                    this.reconstructor = null;\n                    super.emitReserved(\"decoded\", packet);\n                }\n            }\n        }\n        else {\n            throw new Error(\"Unknown type: \" + obj);\n        }\n    }\n    /**\n     * Decode a packet String (JSON data)\n     *\n     * @param {String} str\n     * @return {Object} packet\n     */\n    decodeString(str) {\n        let i = 0;\n        // look up type\n        const p = {\n            type: Number(str.charAt(0)),\n        };\n        if (PacketType[p.type] === undefined) {\n            throw new Error(\"unknown packet type \" + p.type);\n        }\n        // look up attachments if type binary\n        if (p.type === PacketType.BINARY_EVENT ||\n            p.type === PacketType.BINARY_ACK) {\n            const start = i + 1;\n            while (str.charAt(++i) !== \"-\" && i != str.length) { }\n            const buf = str.substring(start, i);\n            if (buf != Number(buf) || str.charAt(i) !== \"-\") {\n                throw new Error(\"Illegal attachments\");\n            }\n            p.attachments = Number(buf);\n        }\n        // look up namespace (if any)\n        if (\"/\" === str.charAt(i + 1)) {\n            const start = i + 1;\n            while (++i) {\n                const c = str.charAt(i);\n                if (\",\" === c)\n                    break;\n                if (i === str.length)\n                    break;\n            }\n            p.nsp = str.substring(start, i);\n        }\n        else {\n            p.nsp = \"/\";\n        }\n        // look up id\n        const next = str.charAt(i + 1);\n        if (\"\" !== next && Number(next) == next) {\n            const start = i + 1;\n            while (++i) {\n                const c = str.charAt(i);\n                if (null == c || Number(c) != c) {\n                    --i;\n                    break;\n                }\n                if (i === str.length)\n                    break;\n            }\n            p.id = Number(str.substring(start, i + 1));\n        }\n        // look up json data\n        if (str.charAt(++i)) {\n            const payload = tryParse(str.substr(i));\n            if (Decoder.isPayloadValid(p.type, payload)) {\n                p.data = payload;\n            }\n            else {\n                throw new Error(\"invalid payload\");\n            }\n        }\n        return p;\n    }\n    static isPayloadValid(type, payload) {\n        switch (type) {\n            case PacketType.CONNECT:\n                return typeof payload === \"object\";\n            case PacketType.DISCONNECT:\n                return payload === undefined;\n            case PacketType.CONNECT_ERROR:\n                return typeof payload === \"string\" || typeof payload === \"object\";\n            case PacketType.EVENT:\n            case PacketType.BINARY_EVENT:\n                return Array.isArray(payload) && payload.length > 0;\n            case PacketType.ACK:\n            case PacketType.BINARY_ACK:\n                return Array.isArray(payload);\n        }\n    }\n    /**\n     * Deallocates a parser's resources\n     */\n    destroy() {\n        if (this.reconstructor) {\n            this.reconstructor.finishedReconstruction();\n        }\n    }\n}\nfunction tryParse(str) {\n    try {\n        return JSON.parse(str);\n    }\n    catch (e) {\n        return false;\n    }\n}\n/**\n * A manager of a binary event's 'buffer sequence'. Should\n * be constructed whenever a packet of type BINARY_EVENT is\n * decoded.\n *\n * @param {Object} packet\n * @return {BinaryReconstructor} initialized reconstructor\n */\nclass BinaryReconstructor {\n    constructor(packet) {\n        this.packet = packet;\n        this.buffers = [];\n        this.reconPack = packet;\n    }\n    /**\n     * Method to be called when binary data received from connection\n     * after a BINARY_EVENT packet.\n     *\n     * @param {Buffer | ArrayBuffer} binData - the raw binary data received\n     * @return {null | Object} returns null if more binary data is expected or\n     *   a reconstructed packet object if all buffers have been received.\n     */\n    takeBinaryData(binData) {\n        this.buffers.push(binData);\n        if (this.buffers.length === this.reconPack.attachments) {\n            // done with buffer list\n            const packet = reconstructPacket(this.reconPack, this.buffers);\n            this.finishedReconstruction();\n            return packet;\n        }\n        return null;\n    }\n    /**\n     * Cleans up binary packet reconstruction variables.\n     */\n    finishedReconstruction() {\n        this.reconPack = null;\n        this.buffers = [];\n    }\n}\n","export function on(obj, ev, fn) {\n    obj.on(ev, fn);\n    return function subDestroy() {\n        obj.off(ev, fn);\n    };\n}\n","import { PacketType } from \"socket.io-parser\";\nimport { on } from \"./on.js\";\nimport { Emitter, } from \"@socket.io/component-emitter\";\n/**\n * Internal events.\n * These events can't be emitted by the user.\n */\nconst RESERVED_EVENTS = Object.freeze({\n    connect: 1,\n    connect_error: 1,\n    disconnect: 1,\n    disconnecting: 1,\n    // EventEmitter reserved events: https://nodejs.org/api/events.html#events_event_newlistener\n    newListener: 1,\n    removeListener: 1,\n});\nexport class Socket extends Emitter {\n    /**\n     * `Socket` constructor.\n     *\n     * @public\n     */\n    constructor(io, nsp, opts) {\n        super();\n        this.connected = false;\n        this.disconnected = true;\n        this.receiveBuffer = [];\n        this.sendBuffer = [];\n        this.ids = 0;\n        this.acks = {};\n        this.flags = {};\n        this.io = io;\n        this.nsp = nsp;\n        if (opts && opts.auth) {\n            this.auth = opts.auth;\n        }\n        if (this.io._autoConnect)\n            this.open();\n    }\n    /**\n     * Subscribe to open, close and packet events\n     *\n     * @private\n     */\n    subEvents() {\n        if (this.subs)\n            return;\n        const io = this.io;\n        this.subs = [\n            on(io, \"open\", this.onopen.bind(this)),\n            on(io, \"packet\", this.onpacket.bind(this)),\n            on(io, \"error\", this.onerror.bind(this)),\n            on(io, \"close\", this.onclose.bind(this)),\n        ];\n    }\n    /**\n     * Whether the Socket will try to reconnect when its Manager connects or reconnects\n     */\n    get active() {\n        return !!this.subs;\n    }\n    /**\n     * \"Opens\" the socket.\n     *\n     * @public\n     */\n    connect() {\n        if (this.connected)\n            return this;\n        this.subEvents();\n        if (!this.io[\"_reconnecting\"])\n            this.io.open(); // ensure open\n        if (\"open\" === this.io._readyState)\n            this.onopen();\n        return this;\n    }\n    /**\n     * Alias for connect()\n     */\n    open() {\n        return this.connect();\n    }\n    /**\n     * Sends a `message` event.\n     *\n     * @return self\n     * @public\n     */\n    send(...args) {\n        args.unshift(\"message\");\n        this.emit.apply(this, args);\n        return this;\n    }\n    /**\n     * Override `emit`.\n     * If the event is in `events`, it's emitted normally.\n     *\n     * @return self\n     * @public\n     */\n    emit(ev, ...args) {\n        if (RESERVED_EVENTS.hasOwnProperty(ev)) {\n            throw new Error('\"' + ev + '\" is a reserved event name');\n        }\n        args.unshift(ev);\n        const packet = {\n            type: PacketType.EVENT,\n            data: args,\n        };\n        packet.options = {};\n        packet.options.compress = this.flags.compress !== false;\n        // event ack callback\n        if (\"function\" === typeof args[args.length - 1]) {\n            this.acks[this.ids] = args.pop();\n            packet.id = this.ids++;\n        }\n        const isTransportWritable = this.io.engine &&\n            this.io.engine.transport &&\n            this.io.engine.transport.writable;\n        const discardPacket = this.flags.volatile && (!isTransportWritable || !this.connected);\n        if (discardPacket) {\n        }\n        else if (this.connected) {\n            this.packet(packet);\n        }\n        else {\n            this.sendBuffer.push(packet);\n        }\n        this.flags = {};\n        return this;\n    }\n    /**\n     * Sends a packet.\n     *\n     * @param packet\n     * @private\n     */\n    packet(packet) {\n        packet.nsp = this.nsp;\n        this.io._packet(packet);\n    }\n    /**\n     * Called upon engine `open`.\n     *\n     * @private\n     */\n    onopen() {\n        if (typeof this.auth == \"function\") {\n            this.auth((data) => {\n                this.packet({ type: PacketType.CONNECT, data });\n            });\n        }\n        else {\n            this.packet({ type: PacketType.CONNECT, data: this.auth });\n        }\n    }\n    /**\n     * Called upon engine or manager `error`.\n     *\n     * @param err\n     * @private\n     */\n    onerror(err) {\n        if (!this.connected) {\n            this.emitReserved(\"connect_error\", err);\n        }\n    }\n    /**\n     * Called upon engine `close`.\n     *\n     * @param reason\n     * @private\n     */\n    onclose(reason) {\n        this.connected = false;\n        this.disconnected = true;\n        delete this.id;\n        this.emitReserved(\"disconnect\", reason);\n    }\n    /**\n     * Called with socket packet.\n     *\n     * @param packet\n     * @private\n     */\n    onpacket(packet) {\n        const sameNamespace = packet.nsp === this.nsp;\n        if (!sameNamespace)\n            return;\n        switch (packet.type) {\n            case PacketType.CONNECT:\n                if (packet.data && packet.data.sid) {\n                    const id = packet.data.sid;\n                    this.onconnect(id);\n                }\n                else {\n                    this.emitReserved(\"connect_error\", new Error(\"It seems you are trying to reach a Socket.IO server in v2.x with a v3.x client, but they are not compatible (more information here: https://socket.io/docs/v3/migrating-from-2-x-to-3-0/)\"));\n                }\n                break;\n            case PacketType.EVENT:\n                this.onevent(packet);\n                break;\n            case PacketType.BINARY_EVENT:\n                this.onevent(packet);\n                break;\n            case PacketType.ACK:\n                this.onack(packet);\n                break;\n            case PacketType.BINARY_ACK:\n                this.onack(packet);\n                break;\n            case PacketType.DISCONNECT:\n                this.ondisconnect();\n                break;\n            case PacketType.CONNECT_ERROR:\n                const err = new Error(packet.data.message);\n                // @ts-ignore\n                err.data = packet.data.data;\n                this.emitReserved(\"connect_error\", err);\n                break;\n        }\n    }\n    /**\n     * Called upon a server event.\n     *\n     * @param packet\n     * @private\n     */\n    onevent(packet) {\n        const args = packet.data || [];\n        if (null != packet.id) {\n            args.push(this.ack(packet.id));\n        }\n        if (this.connected) {\n            this.emitEvent(args);\n        }\n        else {\n            this.receiveBuffer.push(Object.freeze(args));\n        }\n    }\n    emitEvent(args) {\n        if (this._anyListeners && this._anyListeners.length) {\n            const listeners = this._anyListeners.slice();\n            for (const listener of listeners) {\n                listener.apply(this, args);\n            }\n        }\n        super.emit.apply(this, args);\n    }\n    /**\n     * Produces an ack callback to emit with an event.\n     *\n     * @private\n     */\n    ack(id) {\n        const self = this;\n        let sent = false;\n        return function (...args) {\n            // prevent double callbacks\n            if (sent)\n                return;\n            sent = true;\n            self.packet({\n                type: PacketType.ACK,\n                id: id,\n                data: args,\n            });\n        };\n    }\n    /**\n     * Called upon a server acknowlegement.\n     *\n     * @param packet\n     * @private\n     */\n    onack(packet) {\n        const ack = this.acks[packet.id];\n        if (\"function\" === typeof ack) {\n            ack.apply(this, packet.data);\n            delete this.acks[packet.id];\n        }\n        else {\n        }\n    }\n    /**\n     * Called upon server connect.\n     *\n     * @private\n     */\n    onconnect(id) {\n        this.id = id;\n        this.connected = true;\n        this.disconnected = false;\n        this.emitBuffered();\n        this.emitReserved(\"connect\");\n    }\n    /**\n     * Emit buffered events (received and emitted).\n     *\n     * @private\n     */\n    emitBuffered() {\n        this.receiveBuffer.forEach((args) => this.emitEvent(args));\n        this.receiveBuffer = [];\n        this.sendBuffer.forEach((packet) => this.packet(packet));\n        this.sendBuffer = [];\n    }\n    /**\n     * Called upon server disconnect.\n     *\n     * @private\n     */\n    ondisconnect() {\n        this.destroy();\n        this.onclose(\"io server disconnect\");\n    }\n    /**\n     * Called upon forced client/server side disconnections,\n     * this method ensures the manager stops tracking us and\n     * that reconnections don't get triggered for this.\n     *\n     * @private\n     */\n    destroy() {\n        if (this.subs) {\n            // clean subscriptions to avoid reconnections\n            this.subs.forEach((subDestroy) => subDestroy());\n            this.subs = undefined;\n        }\n        this.io[\"_destroy\"](this);\n    }\n    /**\n     * Disconnects the socket manually.\n     *\n     * @return self\n     * @public\n     */\n    disconnect() {\n        if (this.connected) {\n            this.packet({ type: PacketType.DISCONNECT });\n        }\n        // remove socket from pool\n        this.destroy();\n        if (this.connected) {\n            // fire events\n            this.onclose(\"io client disconnect\");\n        }\n        return this;\n    }\n    /**\n     * Alias for disconnect()\n     *\n     * @return self\n     * @public\n     */\n    close() {\n        return this.disconnect();\n    }\n    /**\n     * Sets the compress flag.\n     *\n     * @param compress - if `true`, compresses the sending data\n     * @return self\n     * @public\n     */\n    compress(compress) {\n        this.flags.compress = compress;\n        return this;\n    }\n    /**\n     * Sets a modifier for a subsequent event emission that the event message will be dropped when this socket is not\n     * ready to send messages.\n     *\n     * @returns self\n     * @public\n     */\n    get volatile() {\n        this.flags.volatile = true;\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback.\n     *\n     * @param listener\n     * @public\n     */\n    onAny(listener) {\n        this._anyListeners = this._anyListeners || [];\n        this._anyListeners.push(listener);\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback. The listener is added to the beginning of the listeners array.\n     *\n     * @param listener\n     * @public\n     */\n    prependAny(listener) {\n        this._anyListeners = this._anyListeners || [];\n        this._anyListeners.unshift(listener);\n        return this;\n    }\n    /**\n     * Removes the listener that will be fired when any event is emitted.\n     *\n     * @param listener\n     * @public\n     */\n    offAny(listener) {\n        if (!this._anyListeners) {\n            return this;\n        }\n        if (listener) {\n            const listeners = this._anyListeners;\n            for (let i = 0; i < listeners.length; i++) {\n                if (listener === listeners[i]) {\n                    listeners.splice(i, 1);\n                    return this;\n                }\n            }\n        }\n        else {\n            this._anyListeners = [];\n        }\n        return this;\n    }\n    /**\n     * Returns an array of listeners that are listening for any event that is specified. This array can be manipulated,\n     * e.g. to remove listeners.\n     *\n     * @public\n     */\n    listenersAny() {\n        return this._anyListeners || [];\n    }\n}\n","import { Socket as Engine, installTimerFunctions, } from \"engine.io-client\";\nimport { Socket } from \"./socket.js\";\nimport * as parser from \"socket.io-parser\";\nimport { on } from \"./on.js\";\nimport Backoff from \"backo2\";\nimport { Emitter, } from \"@socket.io/component-emitter\";\nexport class Manager extends Emitter {\n    constructor(uri, opts) {\n        var _a;\n        super();\n        this.nsps = {};\n        this.subs = [];\n        if (uri && \"object\" === typeof uri) {\n            opts = uri;\n            uri = undefined;\n        }\n        opts = opts || {};\n        opts.path = opts.path || \"/socket.io\";\n        this.opts = opts;\n        installTimerFunctions(this, opts);\n        this.reconnection(opts.reconnection !== false);\n        this.reconnectionAttempts(opts.reconnectionAttempts || Infinity);\n        this.reconnectionDelay(opts.reconnectionDelay || 1000);\n        this.reconnectionDelayMax(opts.reconnectionDelayMax || 5000);\n        this.randomizationFactor((_a = opts.randomizationFactor) !== null && _a !== void 0 ? _a : 0.5);\n        this.backoff = new Backoff({\n            min: this.reconnectionDelay(),\n            max: this.reconnectionDelayMax(),\n            jitter: this.randomizationFactor(),\n        });\n        this.timeout(null == opts.timeout ? 20000 : opts.timeout);\n        this._readyState = \"closed\";\n        this.uri = uri;\n        const _parser = opts.parser || parser;\n        this.encoder = new _parser.Encoder();\n        this.decoder = new _parser.Decoder();\n        this._autoConnect = opts.autoConnect !== false;\n        if (this._autoConnect)\n            this.open();\n    }\n    reconnection(v) {\n        if (!arguments.length)\n            return this._reconnection;\n        this._reconnection = !!v;\n        return this;\n    }\n    reconnectionAttempts(v) {\n        if (v === undefined)\n            return this._reconnectionAttempts;\n        this._reconnectionAttempts = v;\n        return this;\n    }\n    reconnectionDelay(v) {\n        var _a;\n        if (v === undefined)\n            return this._reconnectionDelay;\n        this._reconnectionDelay = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMin(v);\n        return this;\n    }\n    randomizationFactor(v) {\n        var _a;\n        if (v === undefined)\n            return this._randomizationFactor;\n        this._randomizationFactor = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setJitter(v);\n        return this;\n    }\n    reconnectionDelayMax(v) {\n        var _a;\n        if (v === undefined)\n            return this._reconnectionDelayMax;\n        this._reconnectionDelayMax = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMax(v);\n        return this;\n    }\n    timeout(v) {\n        if (!arguments.length)\n            return this._timeout;\n        this._timeout = v;\n        return this;\n    }\n    /**\n     * Starts trying to reconnect if reconnection is enabled and we have not\n     * started reconnecting yet\n     *\n     * @private\n     */\n    maybeReconnectOnOpen() {\n        // Only try to reconnect if it's the first time we're connecting\n        if (!this._reconnecting &&\n            this._reconnection &&\n            this.backoff.attempts === 0) {\n            // keeps reconnection from firing twice for the same reconnection loop\n            this.reconnect();\n        }\n    }\n    /**\n     * Sets the current transport `socket`.\n     *\n     * @param {Function} fn - optional, callback\n     * @return self\n     * @public\n     */\n    open(fn) {\n        if (~this._readyState.indexOf(\"open\"))\n            return this;\n        this.engine = new Engine(this.uri, this.opts);\n        const socket = this.engine;\n        const self = this;\n        this._readyState = \"opening\";\n        this.skipReconnect = false;\n        // emit `open`\n        const openSubDestroy = on(socket, \"open\", function () {\n            self.onopen();\n            fn && fn();\n        });\n        // emit `error`\n        const errorSub = on(socket, \"error\", (err) => {\n            self.cleanup();\n            self._readyState = \"closed\";\n            this.emitReserved(\"error\", err);\n            if (fn) {\n                fn(err);\n            }\n            else {\n                // Only do this if there is no fn to handle the error\n                self.maybeReconnectOnOpen();\n            }\n        });\n        if (false !== this._timeout) {\n            const timeout = this._timeout;\n            if (timeout === 0) {\n                openSubDestroy(); // prevents a race condition with the 'open' event\n            }\n            // set timer\n            const timer = this.setTimeoutFn(() => {\n                openSubDestroy();\n                socket.close();\n                // @ts-ignore\n                socket.emit(\"error\", new Error(\"timeout\"));\n            }, timeout);\n            if (this.opts.autoUnref) {\n                timer.unref();\n            }\n            this.subs.push(function subDestroy() {\n                clearTimeout(timer);\n            });\n        }\n        this.subs.push(openSubDestroy);\n        this.subs.push(errorSub);\n        return this;\n    }\n    /**\n     * Alias for open()\n     *\n     * @return self\n     * @public\n     */\n    connect(fn) {\n        return this.open(fn);\n    }\n    /**\n     * Called upon transport open.\n     *\n     * @private\n     */\n    onopen() {\n        // clear old subs\n        this.cleanup();\n        // mark as open\n        this._readyState = \"open\";\n        this.emitReserved(\"open\");\n        // add new subs\n        const socket = this.engine;\n        this.subs.push(on(socket, \"ping\", this.onping.bind(this)), on(socket, \"data\", this.ondata.bind(this)), on(socket, \"error\", this.onerror.bind(this)), on(socket, \"close\", this.onclose.bind(this)), on(this.decoder, \"decoded\", this.ondecoded.bind(this)));\n    }\n    /**\n     * Called upon a ping.\n     *\n     * @private\n     */\n    onping() {\n        this.emitReserved(\"ping\");\n    }\n    /**\n     * Called with data.\n     *\n     * @private\n     */\n    ondata(data) {\n        this.decoder.add(data);\n    }\n    /**\n     * Called when parser fully decodes a packet.\n     *\n     * @private\n     */\n    ondecoded(packet) {\n        this.emitReserved(\"packet\", packet);\n    }\n    /**\n     * Called upon socket error.\n     *\n     * @private\n     */\n    onerror(err) {\n        this.emitReserved(\"error\", err);\n    }\n    /**\n     * Creates a new socket for the given `nsp`.\n     *\n     * @return {Socket}\n     * @public\n     */\n    socket(nsp, opts) {\n        let socket = this.nsps[nsp];\n        if (!socket) {\n            socket = new Socket(this, nsp, opts);\n            this.nsps[nsp] = socket;\n        }\n        return socket;\n    }\n    /**\n     * Called upon a socket close.\n     *\n     * @param socket\n     * @private\n     */\n    _destroy(socket) {\n        const nsps = Object.keys(this.nsps);\n        for (const nsp of nsps) {\n            const socket = this.nsps[nsp];\n            if (socket.active) {\n                return;\n            }\n        }\n        this._close();\n    }\n    /**\n     * Writes a packet.\n     *\n     * @param packet\n     * @private\n     */\n    _packet(packet) {\n        const encodedPackets = this.encoder.encode(packet);\n        for (let i = 0; i < encodedPackets.length; i++) {\n            this.engine.write(encodedPackets[i], packet.options);\n        }\n    }\n    /**\n     * Clean up transport subscriptions and packet buffer.\n     *\n     * @private\n     */\n    cleanup() {\n        this.subs.forEach((subDestroy) => subDestroy());\n        this.subs.length = 0;\n        this.decoder.destroy();\n    }\n    /**\n     * Close the current socket.\n     *\n     * @private\n     */\n    _close() {\n        this.skipReconnect = true;\n        this._reconnecting = false;\n        if (\"opening\" === this._readyState) {\n            // `onclose` will not fire because\n            // an open event never happened\n            this.cleanup();\n        }\n        this.backoff.reset();\n        this._readyState = \"closed\";\n        if (this.engine)\n            this.engine.close();\n    }\n    /**\n     * Alias for close()\n     *\n     * @private\n     */\n    disconnect() {\n        return this._close();\n    }\n    /**\n     * Called upon engine close.\n     *\n     * @private\n     */\n    onclose(reason) {\n        this.cleanup();\n        this.backoff.reset();\n        this._readyState = \"closed\";\n        this.emitReserved(\"close\", reason);\n        if (this._reconnection && !this.skipReconnect) {\n            this.reconnect();\n        }\n    }\n    /**\n     * Attempt a reconnection.\n     *\n     * @private\n     */\n    reconnect() {\n        if (this._reconnecting || this.skipReconnect)\n            return this;\n        const self = this;\n        if (this.backoff.attempts >= this._reconnectionAttempts) {\n            this.backoff.reset();\n            this.emitReserved(\"reconnect_failed\");\n            this._reconnecting = false;\n        }\n        else {\n            const delay = this.backoff.duration();\n            this._reconnecting = true;\n            const timer = this.setTimeoutFn(() => {\n                if (self.skipReconnect)\n                    return;\n                this.emitReserved(\"reconnect_attempt\", self.backoff.attempts);\n                // check again for the case socket closed in above events\n                if (self.skipReconnect)\n                    return;\n                self.open((err) => {\n                    if (err) {\n                        self._reconnecting = false;\n                        self.reconnect();\n                        this.emitReserved(\"reconnect_error\", err);\n                    }\n                    else {\n                        self.onreconnect();\n                    }\n                });\n            }, delay);\n            if (this.opts.autoUnref) {\n                timer.unref();\n            }\n            this.subs.push(function subDestroy() {\n                clearTimeout(timer);\n            });\n        }\n    }\n    /**\n     * Called upon successful reconnect.\n     *\n     * @private\n     */\n    onreconnect() {\n        const attempt = this.backoff.attempts;\n        this._reconnecting = false;\n        this.backoff.reset();\n        this.emitReserved(\"reconnect\", attempt);\n    }\n}\n","import { url } from \"./url.js\";\nimport { Manager } from \"./manager.js\";\nimport { Socket } from \"./socket.js\";\n/**\n * Managers cache.\n */\nconst cache = {};\nfunction lookup(uri, opts) {\n    if (typeof uri === \"object\") {\n        opts = uri;\n        uri = undefined;\n    }\n    opts = opts || {};\n    const parsed = url(uri, opts.path || \"/socket.io\");\n    const source = parsed.source;\n    const id = parsed.id;\n    const path = parsed.path;\n    const sameNamespace = cache[id] && path in cache[id][\"nsps\"];\n    const newConnection = opts.forceNew ||\n        opts[\"force new connection\"] ||\n        false === opts.multiplex ||\n        sameNamespace;\n    let io;\n    if (newConnection) {\n        io = new Manager(source, opts);\n    }\n    else {\n        if (!cache[id]) {\n            cache[id] = new Manager(source, opts);\n        }\n        io = cache[id];\n    }\n    if (parsed.query && !opts.query) {\n        opts.query = parsed.queryKey;\n    }\n    return io.socket(parsed.path, opts);\n}\n// so that \"lookup\" can be used both as a function (e.g. `io(...)`) and as a\n// namespace (e.g. `io.connect(...)`), for backward compatibility\nObject.assign(lookup, {\n    Manager,\n    Socket,\n    io: lookup,\n    connect: lookup,\n});\n/**\n * Protocol version.\n *\n * @public\n */\nexport { protocol } from \"socket.io-parser\";\n/**\n * Expose constructors for standalone build.\n *\n * @public\n */\nexport { Manager, Socket, lookup as io, lookup as connect, lookup as default, };\n","import parseuri from \"parseuri\";\n/**\n * URL parser.\n *\n * @param uri - url\n * @param path - the request path of the connection\n * @param loc - An object meant to mimic window.location.\n *        Defaults to window.location.\n * @public\n */\nexport function url(uri, path = \"\", loc) {\n    let obj = uri;\n    // default to window.location\n    loc = loc || (typeof location !== \"undefined\" && location);\n    if (null == uri)\n        uri = loc.protocol + \"//\" + loc.host;\n    // relative path support\n    if (typeof uri === \"string\") {\n        if (\"/\" === uri.charAt(0)) {\n            if (\"/\" === uri.charAt(1)) {\n                uri = loc.protocol + uri;\n            }\n            else {\n                uri = loc.host + uri;\n            }\n        }\n        if (!/^(https?|wss?):\\/\\//.test(uri)) {\n            if (\"undefined\" !== typeof loc) {\n                uri = loc.protocol + \"//\" + uri;\n            }\n            else {\n                uri = \"https://\" + uri;\n            }\n        }\n        // parse\n        obj = parseuri(uri);\n    }\n    // make sure we treat `localhost:80` and `localhost` equally\n    if (!obj.port) {\n        if (/^(http|ws)$/.test(obj.protocol)) {\n            obj.port = \"80\";\n        }\n        else if (/^(http|ws)s$/.test(obj.protocol)) {\n            obj.port = \"443\";\n        }\n    }\n    obj.path = obj.path || \"/\";\n    const ipv6 = obj.host.indexOf(\":\") !== -1;\n    const host = ipv6 ? \"[\" + obj.host + \"]\" : obj.host;\n    // define unique id\n    obj.id = obj.protocol + \"://\" + host + \":\" + obj.port + path;\n    // define href\n    obj.href =\n        obj.protocol +\n            \"://\" +\n            host +\n            (loc && loc.port === obj.port ? \"\" : \":\" + obj.port);\n    return obj;\n}\n","import \"./scss/style.scss\";\nimport { io } from \"socket.io-client\";\nconst socketio = io('http://localhost:3001');\nconst messageDiv = document.getElementById('messagediv');\nconst form = document.getElementById('form');\nconst input = document.getElementById('input');\n\n//ask for name for chat\nconst username = prompt('Please Enter Name: ');\n\n//add message after entering chat\nsendMessage('Welcome to the chat, ' + `${username}` + '!');\n\nsocketio.emit('joined-user', username);\n\nsocketio.on('joined', username => {\n  sendMessage(`${username} has entered the chat.`);\n});\n\nsocketio.on('msg', data => {\n  //console.log(data);\n  //call function to display username and message\n  sendMessage(`${data.username}: ${data.message}`);\n});\n\nsocketio.on('disconnected', name => {\n  sendMessage(`${username}` + ' has left the chat.')\n});\n\nform.addEventListener('submit', e => {\n  e.preventDefault(); //clicking send will not reload page\n  const message = input.value;\n  sendMessage(`${username}: ${message}`)\n  socketio.emit('share-msg', message)\n  input.value = ''; //clears out input box after sending msg\n});\n\n\n//pass in message and append in messageDiv\nfunction sendMessage(message) {\n  const msg = document.createElement('div');\n  msg.innerText = message;\n  messageDiv.append(msg);\n}\n"],"names":["Emitter","obj","key","prototype","mixin","exports","on","addEventListener","event","fn","this","_callbacks","push","once","off","apply","arguments","removeListener","removeAllListeners","removeEventListener","length","cb","callbacks","i","splice","emit","args","Array","len","slice","emitReserved","listeners","hasListeners","Backoff","opts","ms","min","max","factor","jitter","attempts","module","duration","Math","pow","rand","random","deviation","floor","reset","setMin","setMax","setJitter","XMLHttpRequest","err","encode","str","hasOwnProperty","encodeURIComponent","decode","qs","qry","pairs","split","l","pair","decodeURIComponent","re","parts","path","names","src","b","indexOf","e","substring","replace","query","data","m","exec","uri","source","host","authority","ipv6uri","pathNames","substr","queryKey","$0","$1","$2","prev","alphabet","map","seed","num","encoded","yeast","now","Date","decoded","charAt","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","d","definition","o","Object","defineProperty","enumerable","get","prop","call","r","Symbol","toStringTag","value","self","window","Function","xdomain","concat","join","pick","attr","reduce","acc","k","NATIVE_SET_TIMEOUT","setTimeout","NATIVE_CLEAR_TIMEOUT","clearTimeout","installTimerFunctions","useNativeTimers","setTimeoutFn","bind","clearTimeoutFn","PACKET_TYPES","create","PACKET_TYPES_REVERSE","keys","forEach","ERROR_PACKET","type","withNativeBlob","Blob","toString","withNativeArrayBuffer","ArrayBuffer","encodeBlobAsBase64","callback","fileReader","FileReader","onload","content","result","readAsDataURL","supportsBinary","isView","buffer","chars","lookup","Uint8Array","charCodeAt","decodeBase64Packet","binaryType","base64","encoded1","encoded2","encoded3","encoded4","bufferLength","p","arraybuffer","bytes","mapBinary","encodedPacket","SEPARATOR","String","fromCharCode","Transport","constructor","super","writable","readyState","socket","onError","msg","desc","Error","description","open","doOpen","close","doClose","onClose","send","packets","write","onOpen","onData","packet","onPacket","Polling","polling","name","poll","pause","onPause","total","doPoll","encodedPayload","encodedPackets","decodedPacket","decodePayload","count","encodePayload","doWrite","schema","secure","port","timestampRequests","timestampParam","sid","b64","Number","encodedQuery","parseqs","hostname","empty","hasXHR2","responseType","Request","method","async","xd","xscheme","xs","xhr","extraHeaders","setDisableHeaderCheck","setRequestHeader","withCredentials","requestTimeout","timeout","onreadystatechange","status","onLoad","document","index","requestsCount","requests","onSuccess","cleanup","fromError","abort","responseText","unloadHandler","attachEvent","nextTick","Promise","resolve","then","WebSocket","isReactNative","navigator","product","toLowerCase","WS","forceBase64","check","protocols","headers","ws","addEventListeners","onopen","autoUnref","_socket","unref","onclose","onmessage","ev","onerror","lastPacket","transports","websocket","location","isSSL","protocol","request","assign","req","pollXhr","Socket","parseuri","writeBuffer","prevBufferLen","agent","upgrade","rememberUpgrade","rejectUnauthorized","perMessageDeflate","threshold","transportOptions","closeOnBeforeunload","id","upgrades","pingInterval","pingTimeout","pingTimeoutTimer","transport","offlineEventListener","createTransport","clone","EIO","priorWebsocketSuccess","shift","setTransport","onDrain","probe","failed","onTransportOpen","upgrading","flush","freezeTransport","error","onTransportClose","onupgrade","to","onHandshake","JSON","parse","resetPingTimeout","sendPacket","code","filterUpgrades","options","compress","cleanupAndClose","waitForUpgrade","reason","filteredUpgrades","j","withNativeFile","File","isBinary","hasBinary","toJSON","isArray","deconstructPacket","buffers","packetData","pack","_deconstructPacket","attachments","placeholder","_placeholder","newData","reconstructPacket","_reconstructPacket","PacketType","Encoder","EVENT","ACK","encodeAsString","BINARY_EVENT","BINARY_ACK","encodeAsBinary","nsp","stringify","deconstruction","unshift","Decoder","add","decodeString","reconstructor","BinaryReconstructor","takeBinaryData","start","buf","next","c","payload","tryParse","isPayloadValid","static","CONNECT","DISCONNECT","CONNECT_ERROR","destroy","finishedReconstruction","reconPack","binData","RESERVED_EVENTS","freeze","connect","connect_error","disconnect","disconnecting","newListener","io","connected","disconnected","receiveBuffer","sendBuffer","ids","acks","flags","auth","_autoConnect","subEvents","subs","onpacket","active","_readyState","pop","isTransportWritable","engine","volatile","_packet","onconnect","onevent","onack","ondisconnect","message","ack","emitEvent","_anyListeners","listener","sent","emitBuffered","subDestroy","onAny","prependAny","offAny","listenersAny","Manager","_a","nsps","reconnection","reconnectionAttempts","Infinity","reconnectionDelay","reconnectionDelayMax","randomizationFactor","backoff","_parser","parser","encoder","decoder","autoConnect","v","_reconnection","_reconnectionAttempts","_reconnectionDelay","_randomizationFactor","_reconnectionDelayMax","_timeout","maybeReconnectOnOpen","_reconnecting","reconnect","skipReconnect","openSubDestroy","errorSub","timer","onping","ondata","ondecoded","_destroy","_close","delay","onreconnect","attempt","cache","parsed","loc","test","href","url","sameNamespace","forceNew","multiplex","socketio","messageDiv","getElementById","form","input","username","prompt","sendMessage","createElement","innerText","append","preventDefault"],"sourceRoot":""}